{
    "name": "Data Marts",
    "description": "",
    "version": "1.0",
    "culture": "en-US",
    "modifiedTime": "2023-02-07T19:25:10.2778436+00:00",
    "ppdf:outputFileFormat": "Csv",
    "pbi:mashup": {
        "fastCombine": true,
        "allowNativeQueries": false,
        "queriesMetadata": {
            "school_year_end_dates": {
                "queryId": "bd0bd055-5cc0-45d3-adf6-3b9b536a9fc0",
                "queryName": "school_year_end_dates",
                "queryGroupId": "e6f3944a-d808-4125-b475-3b2a2d4b8085"
            },
            "active_enrollments": {
                "queryId": "38d7659e-862d-46b9-b72f-36beb762ebf4",
                "queryName": "active_enrollments",
                "queryGroupId": "e6f3944a-d808-4125-b475-3b2a2d4b8085"
            },
            "student_grade_level_ranked": {
                "queryId": "9c011fb1-935b-4b5a-bd3c-a4e7a7b7718d",
                "queryName": "student_grade_level_ranked",
                "queryGroupId": "e6f3944a-d808-4125-b475-3b2a2d4b8085"
            },
            "WorkspaceName": {
                "queryId": "6b899edc-277c-41fd-9c0c-46f8bbc14afa",
                "queryName": "WorkspaceName",
                "queryGroupId": "a541fe00-19df-44cf-a9d3-55d425a27ef9"
            },
            "DataflowName": {
                "queryId": "a8541db2-6650-4ef5-9d9a-cdb14b952699",
                "queryName": "DataflowName",
                "queryGroupId": "a541fe00-19df-44cf-a9d3-55d425a27ef9"
            },
            "SchoolYear": {
                "queryId": "17ee2388-80fa-45d1-a4e3-e5505f7c9534",
                "queryName": "SchoolYear",
                "queryGroupId": "a541fe00-19df-44cf-a9d3-55d425a27ef9"
            },
            "student_grade_level": {
                "queryId": "33bc70ca-2a07-49bb-ab8d-426fcded63b7",
                "queryName": "student_grade_level",
                "queryGroupId": "e6f3944a-d808-4125-b475-3b2a2d4b8085"
            },
            "students": {
                "queryId": "6caaa635-8e99-41b4-86fe-0248bddfa362",
                "queryName": "students",
                "queryGroupId": "e6f3944a-d808-4125-b475-3b2a2d4b8085"
            },
            "dim_student": {
                "queryId": "9da53413-1b5f-44f9-9903-c3da67e15bca",
                "queryName": "dim_student",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "dim_local_education_agency": {
                "queryId": "5ac5ce87-9a9f-46f2-baee-77b72b9270a3",
                "queryName": "dim_local_education_agency",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "dim_schools": {
                "queryId": "6fa36f94-f8c2-4070-97d8-9bfb8d93c51f",
                "queryName": "dim_schools",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "dim_sessions": {
                "queryId": "54bfe4d7-d06c-46ef-b175-f739da4f3bbe",
                "queryName": "dim_sessions",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "dim_date": {
                "queryId": "d5b5579c-3db5-4e2e-9321-22cc17958795",
                "queryName": "dim_date",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "fct_student_attendance": {
                "queryId": "9cca0e9d-d473-4926-bf2d-ddbd0e253ef5",
                "queryName": "fct_student_attendance",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "fct_student_school": {
                "queryId": "fed45d5d-2859-40eb-a1f4-3406d8c576a6",
                "queryName": "fct_student_school",
                "queryGroupId": "281c8544-9d6b-4ffd-a278-c6c2db949a09",
                "loadEnabled": true
            },
            "LocalEducationAgencies": {
                "queryId": "0c10c48d-c6c5-4700-944f-d8224d0a720b",
                "queryName": "LocalEducationAgencies",
                "queryGroupId": "2391ae51-b8d9-4a65-b44a-61bccd37e3a5"
            },
            "Schools": {
                "queryId": "63b721bb-c3a2-4ade-8be2-7242277009e1",
                "queryName": "Schools",
                "queryGroupId": "18259935-88e8-480d-b5a9-b95688f92b2a"
            },
            "stg_edfi_students": {
                "queryId": "c4f53b65-7f96-45de-baa9-a69e54250c97",
                "queryName": "stg_edfi_students",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_education_organization_associations": {
                "queryId": "69c22148-06d4-4cb3-94df-9a4189db3662",
                "queryName": "stg_edfi_student_education_organization_associations",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_programs": {
                "queryId": "82fbbaa9-8fa5-4d2c-a6d2-1d7ad647e449",
                "queryName": "stg_edfi_programs",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_program_associations": {
                "queryId": "977100ba-5429-47ba-8551-e42517faa918",
                "queryName": "stg_edfi_student_program_associations",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_school_associations": {
                "queryId": "d7fce0bd-24e4-4741-842f-354f0ebd19f7",
                "queryName": "stg_edfi_student_school_associations",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_schools": {
                "queryId": "2b6609cd-b534-4780-895b-f80c732cc9a7",
                "queryName": "stg_edfi_schools",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_local_education_agencies": {
                "queryId": "82342db8-d05f-4914-bda2-5d827327d155",
                "queryName": "stg_edfi_local_education_agencies",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_special_education_program_associations": {
                "queryId": "d798d96f-97d3-4f5e-87d7-e1c6f7739775",
                "queryName": "stg_edfi_student_special_education_program_associations",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_sessions": {
                "queryId": "aaeb76f0-1ace-4f29-9aca-acf645537dce",
                "queryName": "stg_edfi_sessions",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_grades": {
                "queryId": "7c97b4ea-1809-46b0-8db3-cfee087638df",
                "queryName": "stg_edfi_grades",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_grading_periods": {
                "queryId": "b74363a6-4214-457a-8a53-506e7610c653",
                "queryName": "stg_edfi_grading_periods",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_school_year_types": {
                "queryId": "3fbbf20c-2666-4964-92d7-5ce369bf206b",
                "queryName": "stg_edfi_school_year_types",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_calendar_dates": {
                "queryId": "89f7504f-62f3-4db6-80b7-9740a5fd4887",
                "queryName": "stg_edfi_calendar_dates",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_section_attendance_events": {
                "queryId": "0dc5ddf3-c39e-44e9-8ed1-f408294687d5",
                "queryName": "stg_edfi_student_section_attendance_events",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_school_attendance_events": {
                "queryId": "bddb5605-8fd2-4cc6-b4bc-6de1128be16d",
                "queryName": "stg_edfi_student_school_attendance_events",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_section_associations": {
                "queryId": "12910b11-d0bd-4787-8cf7-10375bbadeff",
                "queryName": "stg_edfi_student_section_associations",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "sessions": {
                "queryId": "0378ce57-ca53-4366-a238-bde5079a283b",
                "queryName": "sessions",
                "queryGroupId": "c4ad7165-85e5-405e-830b-3d86aadae3c0"
            },
            "fct_std_atn_schools": {
                "queryId": "706614af-571e-43c8-b055-19f01492287c",
                "queryName": "fct_std_atn_schools",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_students": {
                "queryId": "5cf62b94-0138-4dd3-af11-2d3ec22225f3",
                "queryName": "fct_std_atn_students",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "stg_edfi_calendar_dates_with_gaps_filled_in": {
                "queryId": "40c27056-d99f-4cb9-a37e-4d3f319c4ae9",
                "queryName": "stg_edfi_calendar_dates_with_gaps_filled_in",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_calendar_dates": {
                "queryId": "26f795ff-3ecd-468c-b3c9-406f128bb274",
                "queryName": "fct_std_atn_calendar_dates",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_school_attendance": {
                "queryId": "6df1a6b9-06a3-4cc4-86c2-395e7fafb859",
                "queryName": "fct_std_atn_school_attendance",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_section_attendance": {
                "queryId": "c02f9d1a-eeee-4006-a5b3-0ba59cff52ec",
                "queryName": "fct_std_atn_section_attendance",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_student_section_associations": {
                "queryId": "af19ecb6-c8ca-4e67-a5b0-021b8c87f797",
                "queryName": "fct_std_atn_student_section_associations",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "fct_std_atn_student_attendance": {
                "queryId": "0f8fd6f6-b685-4217-be0e-96d2047a1908",
                "queryName": "fct_std_atn_student_attendance",
                "queryGroupId": "4e73c292-fefd-4d0c-aca0-41359702fe1a"
            },
            "generate_missing_calendar_dates": {
                "queryId": "24edecf3-d441-4b99-8cb4-4e00a7f94ff8",
                "queryName": "generate_missing_calendar_dates",
                "queryGroupId": "57d85ec6-523e-4397-96fa-2ece488f9d69"
            },
            "dates": {
                "queryId": "f4d730df-b0a2-4016-95a2-a80a607b8fca",
                "queryName": "dates",
                "queryGroupId": "57d85ec6-523e-4397-96fa-2ece488f9d69"
            },
            "stg_edfi_graduation_plans": {
                "queryId": "e7b93ad3-2ada-4a5e-8967-366c92960b6a",
                "queryName": "stg_edfi_graduation_plans",
                "queryGroupId": "e7ca55ad-66cc-4336-81f2-ea42a242ed31"
            },
            "stg_edfi_student_school_associations (2)": {
                "queryId": "5b204abf-9c2f-44c2-9ab8-77b912f9db6c",
                "queryName": "stg_edfi_student_school_associations (2)",
                "queryGroupId": "a9174444-d060-4af6-8ae2-32201fba6f5c"
            }
        },
        "queryGroups": [
            {
                "id": "b6ab2793-e358-4f4c-ae15-2fe243dceb3d",
                "name": "Attendance queries",
                "description": "AutoML: Attendance queries",
                "parentId": null,
                "order": 0
            },
            {
                "id": "1ad23420-a1b1-48d9-be46-c36dd79105bf",
                "name": "Attendance - Absent queries",
                "description": "AutoML: Attendance - Absent queries",
                "parentId": null,
                "order": 1
            }
        ],
        "document": "section Section1;\r\nshared school_year_end_dates = let\r\n  Source = stg_edfi_sessions,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"school_id\", \"school_year\", \"end_date\"}),\r\n  #\"Grouped rows\" = Table.Group(#\"Removed other columns\", {\"school_id\", \"school_year\"}, {{\"end_date\", each List.Max([end_date]), type nullable date}})\r\nin\r\n  #\"Grouped rows\";\r\nshared active_enrollments = let\r\n  currentdate = DateTime.Date(DateTime.LocalNow()),\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_id\", \"school_year\"}, school_year_end_dates, {\"school_id\", \"school_year\"}, \"school_year_end_dates\", JoinKind.LeftOuter),\r\n  #\"Expanded school_year_end_dates\" = Table.ExpandTableColumn(#\"Merged queries\", \"school_year_end_dates\", {\"school_year_end_date\"}, {\"school_year_end_date\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Expanded school_year_end_dates\", each [exit_withdrawl_date] = null or (currentdate > [entry_date] and currentdate <= [exit_withdrawl_date]) or [exit_withdrawl_date] > school_year_end_date),\r\n  #\"Removed other columns\" = Table.SelectColumns(#\"Filtered rows\", {\"school_year\", \"student_unique_id\"}),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Removed other columns\", \"is_actively_enrolled_in_school\", each \"Yes\"), {{\"is_actively_enrolled_in_school\", type text}})\r\nin\r\n  #\"Added custom\";\r\nshared student_grade_level_ranked = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"school_id\", \"school_year\", \"student_unique_id\", \"entry_date\", \"entry_grade_level_descriptor\"}),\r\n  #\"Duplicated column\" = Table.DuplicateColumn(#\"Removed other columns\", \"entry_grade_level_descriptor\", \"entry_grade_level_descriptor - Copy\"),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Duplicated column\", {{\"entry_grade_level_descriptor - Copy\", \"grade_level\"}, {\"entry_grade_level_descriptor\", \"grade_level_id\"}}),\r\n  #\"Grouped rows\" = Table.Group(#\"Renamed columns\",\n   {\"school_year\", \"student_unique_id\"},\n   {{\"AllRowsGrouped\", \n   each Table.AddIndexColumn(\n        Table.Sort(_,{{\"entry_date\", \n        Order.Descending}}), \"rank\",1,1),\n    type table [grade_level=nullable text, \n        grade_level_id=nullable text, \n        entry_date=nullable date,\n        school_id=nullable Int64.Type,\n        rank=nullable Int64.Type]\n        }\n    }\n),\r\n  #\"Expanded AllRowsGrouped\" = Table.ExpandTableColumn(#\"Grouped rows\", \"AllRowsGrouped\", {\"grade_level\", \"grade_level_id\", \"entry_date\", \"school_id\", \"rank\"}, {\"grade_level\", \"grade_level_id\", \"entry_date\", \"school_id\", \"rank\"})\r\nin\r\n  #\"Expanded AllRowsGrouped\";\r\nshared WorkspaceName = \"Ed-Fi Exchange Dev\" meta [IsParameterQuery = true, IsParameterQueryRequired = false, Type = type text];\r\nshared DataflowName = \"Staging\" meta [IsParameterQuery = true, IsParameterQueryRequired = false, Type = type text];\r\nshared SchoolYear = 2022 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type any];\r\nshared student_grade_level = let\r\n  Source = student_grade_level_ranked,\r\n  #\"Filtered rows\" = Table.SelectRows(Source, each ([rank] = 1)),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Filtered rows\", {{\"rank\", null}})\r\nin\r\n  #\"Replace errors\";\r\nshared students = let\n  Source = stg_edfi_students,\n  #\"Renamed columns\" = Table.RenameColumns(Source, {{\"first_name\", \"student_first_name\"}, {\"last_surname\", \"student_last_surname\"}, {\"middle_name\", \"student_middle_name\"}}),\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Renamed columns\", {\"id\", \"birth_country_descriptor\", \"identification_documents\", \"personal_identification_documents\", \"visa_descriptor\"}),\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Removed columns 1\", \"student_key\", each [student_unique_id] & \"_\" & Text.From(SchoolYear)), {{\"student_key\", type text}}),\n  #\"Inserted Merged Column\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom\", \"student_display_name\", each Text.Combine({[student_last_surname], \", \", [student_first_name], \" \", [student_middle_name]})), {{\"student_display_name\", type text}}),\n  #\"Merged queries\" = Table.NestedJoin(#\"Inserted Merged Column\", {\"student_unique_id\"}, stg_edfi_student_education_organization_associations, {\"student_unique_id\"}, \"student_education_organization_associations\", JoinKind.LeftOuter),\n  #\"Expanded StudentEducationOrganizationAssociations\" = Table.ExpandTableColumn(#\"Merged queries\", \"student_education_organization_associations\", {\"hispanic_latino_ethnicity\", \"limited_english_proficiency_descriptor\", \"sex_descriptor\", \"electronic_mail_address\", \"race_descriptor\"}, {\"hispanic_latino_ethnicity\", \"limited_english_proficiency_descriptor\", \"sex_descriptor\", \"electronic_mail_address\", \"race_descriptor\"}),\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Expanded StudentEducationOrganizationAssociations\", {{\"electronic_mail_address\", \"email\"}, {\"race_descriptor\", \"races\"}, {\"sex_descriptor\", \"gender\"}}),\n  #\"Merged queries 1\" = Table.NestedJoin(#\"Renamed columns 1\", {\"student_unique_id\", \"school_year\"}, active_enrollments, {\"student_unique_id\", \"school_year\"}, \"active_enrollments\", JoinKind.LeftOuter),\n  #\"Expanded active_enrollments\" = Table.ExpandTableColumn(#\"Merged queries 1\", \"active_enrollments\", {\"is_actively_enrolled_in_school\"}, {\"is_actively_enrolled_in_school\"}),\n  #\"Replaced value\" = Table.ReplaceValue(#\"Expanded active_enrollments\", null, \"No\", Replacer.ReplaceValue, {\"is_actively_enrolled_in_school\"}),\n  #\"Merged queries 2\" = Table.NestedJoin(#\"Replaced value\", {\"student_unique_id\", \"school_year\"}, student_grade_level, {\"student_unique_id\", \"school_year\"}, \"student_grade_level\", JoinKind.LeftOuter),\n  #\"Expanded student_grade_level\" = Table.ExpandTableColumn(#\"Merged queries 2\", \"student_grade_level\", {\"grade_level\", \"grade_level_id\"}, {\"grade_level\", \"grade_level_id\"}),\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Expanded student_grade_level\", \"is_english_language_learner\", each if [limited_english_proficiency_descriptor] = \"Limited\" then \"Yes\" else \"No\"),\n  #\"Added custom 2\" = Table.TransformColumnTypes(Table.AddColumn(#\"Inserted conditional column\", \"limited_english_proficiency\", each \"Not applicable\"), {{\"limited_english_proficiency\", type text}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Added custom 2\", {{\"is_english_language_learner\", type text}}),\n  #\"Merged queries 3\" = Table.NestedJoin(#\"Transform columns\", {\"student_unique_id\", \"school_year\"}, stg_edfi_student_special_education_program_associations, {\"student_unique_id\", \"school_year\"}, \"student_special_education_program_associations\", JoinKind.LeftOuter),\n  #\"Expanded StudentSpecialEducationProgramAssociations\" = Table.ExpandTableColumn(#\"Merged queries 3\", \"student_special_education_program_associations\", {\"education_organization_id\", \"program_type_descriptor\"}, {\"education_organization_id\", \"program_type_descriptor\"}),\n  #\"Merged queries 4\" = Table.NestedJoin(#\"Expanded StudentSpecialEducationProgramAssociations\", {\"school_year\", \"program_type_descriptor\"}, stg_edfi_programs, {\"school_year\", \"program_type_descriptor\"}, \"Programs\", JoinKind.LeftOuter),\n  #\"Expanded Programs\" = Table.ExpandTableColumn(#\"Merged queries 4\", \"Programs\", {\"program_name\"}, {\"program_name\"}),\n  #\"Inserted conditional column 1\" = Table.AddColumn(#\"Expanded Programs\", \"in_special_education_program\", each if [program_type_descriptor] <> null then \"Yes\" else \"No\"),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Inserted conditional column 1\", {{\"in_special_education_program\", type text}}),\n  #\"Inserted conditional column 2\" = Table.AddColumn(#\"Changed column type\", \"is_hispanic\", each if [hispanic_latino_ethnicity] = true then \"Yes\" else \"No\"),\n  #\"Grouped rows\" = Table.Group(#\"Inserted conditional column 2\", {\"student_key\"}, {{\"CountOfRaces\", each Table.RowCount(Table.Distinct(_)), Int64.Type}, {\"OtherColumns\", each _, type nullable table[student_unique_id = nullable text, birth_date = nullable date, student_first_name = nullable text, student_last_surname = nullable text, student_middle_name = nullable text, student_key = nullable text, school_year = nullable Int64.Type, student_display_name = nullable text, hispanic_latino_ethnicity = nullable logical, gender = nullable text, email = nullable text, races = nullable text, is_actively_enrolled_in_school = nullable text, grade_level = nullable text, grade_level_id = nullable text, is_english_language_learner = nullable text, limited_english_proficiency = nullable text, education_organization_id = nullable Int64.Type, program_type_descriptor = nullable text, program_name = nullable text, in_special_education_program = nullable text, is_hispanic = any]}}),\n  #\"Expanded OtherColumns\" = Table.ExpandTableColumn(#\"Grouped rows\", \"OtherColumns\", {\"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"email\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"gender\", \"birth_date\", \"limited_english_proficiency\", \"is_english_language_learner\", \"in_special_education_program\", \"is_hispanic\", \"hispanic_latino_ethnicity\", \"education_organization_id\", \"program_type_descriptor\", \"program_name\", \"races\"}, {\"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"email\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"gender\", \"birth_date\", \"limited_english_proficiency\", \"is_english_language_learner\", \"in_special_education_program\", \"is_hispanic\", \"hispanic_latino_ethnicity\", \"education_organization_id\", \"program_type_descriptor\", \"program_name\", \"races\"}),\n  #\"Inserted conditional column 3\" = Table.AddColumn(#\"Expanded OtherColumns\", \"race_and_ethnicity_roll_up\", each if [hispanic_latino_ethnicity] = true then \"Hispanic or Latino\" else if [CountOfRaces] > 1 then \"Two or more races\" else if [CountOfRaces] = 0 then \"Unknown\" else [races]),\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Inserted conditional column 3\", {{\"race_and_ethnicity_roll_up\", type text}}),\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Changed column type 1\", {\"student_key\", \"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"email\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"limited_english_proficiency\", \"is_english_language_learner\", \"in_special_education_program\", \"is_hispanic\", \"race_and_ethnicity_roll_up\", \"gender\", \"birth_date\", \"hispanic_latino_ethnicity\", \"CountOfRaces\", \"education_organization_id\", \"program_type_descriptor\", \"program_name\", \"races\"}),\n  #\"Removed columns 2\" = Table.RemoveColumns(#\"Reordered columns\", {\"hispanic_latino_ethnicity\", \"CountOfRaces\", \"education_organization_id\", \"program_type_descriptor\", \"program_name\", \"races\"}),\n  #\"Transform columns 1\" = Table.TransformColumnTypes(#\"Removed columns 2\", {{\"is_hispanic\", type text}}),\n  #\"Removed duplicates\" = Table.Distinct(#\"Transform columns 1\", {\"student_key\", \"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"email\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"limited_english_proficiency\", \"is_english_language_learner\", \"in_special_education_program\", \"is_hispanic\", \"race_and_ethnicity_roll_up\", \"gender\", \"birth_date\"}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Removed duplicates\", {{\"is_hispanic\", null}})\nin\n  #\"Replace errors\";\r\nshared dim_student = let\r\n  Source = students,\r\n  #\"Replaced value\" = Table.ReplaceValue(Source, null, \"Unknown\", Replacer.ReplaceValue, {\"race_and_ethnicity_roll_up\"}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Replaced value\", {\"student_key\", \"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"email\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"race_and_ethnicity_roll_up\", \"gender\", \"birth_date\", \"limited_english_proficiency\", \"is_english_language_learner\", \"in_special_education_program\", \"is_hispanic\"}),\r\n  #\"Grouped rows\" = Table.Group(#\"Reordered columns\", {\"student_key\", \"school_year\", \"student_unique_id\", \"student_first_name\", \"student_middle_name\", \"student_last_surname\", \"student_display_name\", \"is_actively_enrolled_in_school\", \"grade_level\", \"grade_level_id\", \"race_and_ethnicity_roll_up\", \"gender\", \"birth_date\"}, {{\"limited_english_proficiency\", each List.Min([limited_english_proficiency]), type nullable text}, {\"is_english_language_learner\", each List.Max([is_english_language_learner]), type nullable text}, {\"in_special_education_program\", each List.Max([in_special_education_program]), type nullable text}, {\"is_hispanic\", each List.Max([is_hispanic]), type nullable text}, {\"email\", each List.Max([email]), type nullable text}}),\r\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Grouped rows\", {{\"is_hispanic\", type text}}),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"is_hispanic\", null}}),\r\n  #\"Marked key columns\" = Table.AddKey(#\"Replace errors\", {\"student_key\"}, false)\r\nin\r\n  #\"Marked key columns\";\r\nshared dim_local_education_agency = let\r\n  Source = LocalEducationAgencies,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"local_education_agency_id\", \"local_education_agency_name\", \"local_education_agency_key\", \"school_year\"}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Removed other columns\", {\"local_education_agency_key\", \"school_year\", \"local_education_agency_id\", \"local_education_agency_name\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Reordered columns\", {{\"local_education_agency_id\", type text}}),\r\n  #\"Marked key columns\" = Table.AddKey(#\"Changed column type\", {\"local_education_agency_key\"}, false),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Marked key columns\", {\"local_education_agency_key\", \"school_year\", \"local_education_agency_id\", \"local_education_agency_name\"}),\r\n  #\"Marked key columns 1\" = Table.AddKey(#\"Removed duplicates\", {\"local_education_agency_key\"}, false)\r\nin\r\n  #\"Marked key columns 1\";\r\nshared dim_schools = let\r\n  Source = Schools,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"local_education_agency_name\", \"local_education_agency_key\", \"school_key\", \"school_year\", \"school_type\", \"school_name\", \"school_id\"}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Removed other columns\", {\"school_key\", \"local_education_agency_key\", \"school_year\", \"school_id\", \"school_name\", \"school_type\", \"local_education_agency_name\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Reordered columns\", {{\"school_id\", type text}}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Changed column type\", {\"school_key\", \"local_education_agency_key\", \"school_year\", \"school_id\", \"school_name\", \"school_type\", \"local_education_agency_name\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared dim_sessions = let\r\n  Source = sessions,\r\n  #\"Reordered columns\" = Table.ReorderColumns(Source, {\"session_key\", \"school_key\", \"school_year\", \"school_year_name\", \"session_name\", \"term_name\", \"total_instructional_days\", \"session_begin_date\", \"session_end_date\", \"id\", \"school_id\", \"academic_weeks\", \"grading_period_descriptor\", \"period_sequence\"}),\r\n  #\"Removed other columns\" = Table.SelectColumns(#\"Reordered columns\", {\"session_key\", \"school_key\", \"school_year\", \"school_year_name\", \"session_name\", \"term_name\", \"total_instructional_days\", \"session_begin_date\", \"session_end_date\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared dim_date = let\r\n  Source = dates,\r\n  #\"Inserted Day Name\" = Table.AddColumn(Source, \"day\", each Date.DayOfWeekName([date]), type text),\r\n  #\"Inserted Month Name\" = Table.AddColumn(#\"Inserted Day Name\", \"month_name\", each Date.MonthName([date]), type text),\r\n  #\"Inserted Month\" = Table.AddColumn(#\"Inserted Month Name\", \"month\", each Date.Month([date]), Int64.Type),\r\n  #\"Inserted Quarter\" = Table.AddColumn(#\"Inserted Month\", \"calendar_quarter\", each Date.QuarterOfYear([date]), Int64.Type),\r\n  #\"Added Conditional Column\" = Table.AddColumn(#\"Inserted Quarter\", \"Custom\", each if [calendar_quarter] = 3 then \"Third\" else if [calendar_quarter] = 4 then \"Fourth\" else if [calendar_quarter] = 1 then \"First\" else if [calendar_quarter] = 2 then \"Second\" else null, type text),\r\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Added Conditional Column\", \"month_sort_order\", each if [month] >= 7 then [month] - 6 else [month] + 6),\r\n  #\"Marked key columns\" = Table.AddKey(#\"Inserted conditional column\", {\"date\"}, false),\r\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Marked key columns\", {{\"month_sort_order\", type text}}),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"month_sort_order\", null}}),\r\n  #\"Transform columns 1\" = Table.TransformColumnTypes(#\"Replace errors\", {{\"school_year\", type text}}),\r\n  #\"Replace errors 1\" = Table.ReplaceErrorValues(#\"Transform columns 1\", {{\"school_year\", null}})\r\nin\r\n  #\"Replace errors 1\";\r\nshared fct_student_attendance = let\r\n  Source = fct_std_atn_student_attendance,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"local_education_agency_key\", \"school_key\", \"student_key\", \"date\", \"attendance_event_category_descriptor\", \"reported_as_absent_from_school\", \"reported_as_present_at_school\"}),\r\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Removed other columns\", {{\"reported_as_absent_from_school\", type text}, {\"reported_as_present_at_school\", type text}}),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"reported_as_absent_from_school\", null}, {\"reported_as_present_at_school\", null}})\r\nin\r\n  #\"Replace errors\";\r\nshared fct_student_school = let\n  Source = #\"stg_edfi_student_school_associations (2)\",\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"enrollment_date\", \"grade_level\", \"enrollment_type\", \"exit_date\", \"exit_type\", \"is_primary_school\", \"date\", \"student_key\", \"local_education_agency_key\", \"school_key\", \"grade_level_id\", \"is_actively_enrolled_in_school\"}),\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Removed other columns\", {\"student_key\", \"local_education_agency_key\", \"school_key\", \"grade_level\", \"grade_level_id\", \"enrollment_date\", \"enrollment_type\", \"exit_date\", \"exit_type\", \"is_primary_school\", \"is_actively_enrolled_in_school\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Reordered columns\", each ([date] <> null)),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Filtered rows\", {\"student_key\", \"local_education_agency_key\", \"school_key\", \"grade_level\", \"grade_level_id\", \"enrollment_date\", \"date\", \"enrollment_type\", \"exit_date\", \"exit_type\", \"is_primary_school\", \"is_actively_enrolled_in_school\"})\nin\n  #\"Removed duplicates\";\r\nshared LocalEducationAgencies = let\r\n  Source = stg_edfi_local_education_agencies,\r\n  #\"Renamed columns\" = Table.RenameColumns(Source, {{\"name_of_institution\", \"local_education_agency_name\"}}),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Renamed columns\", \"local_education_agency_key\", each Text.From([local_education_agency_id]) & \"_\" & Text.From(SchoolYear)), {{\"local_education_agency_key\", type text}})\r\nin\r\n  #\"Added custom\";\r\nshared Schools = let\r\n  Source = stg_edfi_schools,\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(Source, \"school_key\", each Text.From([school_id]) & \"_\" & Text.From(SchoolYear)), {{\"school_key\", type text}}),\r\n  #\"Merged queries\" = Table.NestedJoin(#\"Added custom\", {\"local_education_agency_id\", \"school_year\"}, LocalEducationAgencies, {\"local_education_agency_id\", \"school_year\"}, \"_LocalEducationAgencies\", JoinKind.LeftOuter),\r\n  #\"Expanded _LocalEducationAgencies\" = Table.ExpandTableColumn(#\"Merged queries\", \"_LocalEducationAgencies\", {\"local_education_agency_key\", \"local_education_agency_name\"}, {\"local_education_agency_key\", \"local_education_agency_name\"}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Expanded _LocalEducationAgencies\", {{\"school_id\", \"school_id\"}, {\"name_of_institution\", \"school_name\"}, {\"school_type_descriptor\", \"school_type\"}})\r\nin\r\n  #\"Renamed columns\";\r\n[Description = \"This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.\"]\r\nshared stg_edfi_students = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_students\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_education_organization_associations = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_education_organization_associations\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_programs = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_programs\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_program_associations = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_program_associations\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_school_associations = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_school_associations\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_schools = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_schools\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_local_education_agencies = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_local_education_agencies\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_special_education_program_associations = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_special_education_program_associations\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_sessions = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_sessions\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_grades = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_grades\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_grading_periods = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_grading_periods\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_school_year_types = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_school_year_types\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_calendar_dates = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_calendar_dates\", version=\"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_section_attendance_events = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_section_attendance_events\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_school_attendance_events = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_school_attendance_events\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared stg_edfi_student_section_associations = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_student_section_associations\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared sessions = let\r\n  Source = stg_edfi_sessions,\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(Source, \"session_key\", each [school_id] & \"_\" & Text.From([school_year]) & \"_\" & [session_name]), {{\"session_key\", type text}}),\r\n  #\"Added custom 1\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom\", \"school_key\", each [school_id] & \"_\" & Text.From([school_year])), {{\"school_key\", type text}}),\r\n  #\"Merged queries\" = Table.NestedJoin(#\"Added custom 1\", {\"school_year\"}, stg_edfi_school_year_types, {\"school_year\"}, \"stg_edfi_school_year_types\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_school_year_types\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_school_year_types\", {\"school_year_description\"}, {\"school_year_description\"}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Expanded stg_edfi_school_year_types\", {{\"school_year_description\", \"school_year_name\"}, {\"term_descriptor\", \"term_name\"}, {\"begin_date\", \"session_begin_date\"}, {\"end_date\", \"session_end_date\"}})\r\nin\r\n  #\"Renamed columns\";\r\nshared fct_std_atn_schools = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_id\", \"school_year\"}, stg_edfi_schools, {\"school_id\", \"school_year\"}, \"stg_edfi_schools\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_schools\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_schools\", {\"local_education_agency_id\"}, {\"local_education_agency_id\"})\r\nin\r\n  #\"Expanded stg_edfi_schools\";\r\nshared fct_std_atn_students = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_year\", \"student_unique_id\"}, stg_edfi_students, {\"school_year\", \"student_unique_id\"}, \"stg_edfi_students\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_students\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_students\", {\"birth_country_descriptor\", \"birth_date\", \"first_name\", \"last_surname\", \"middle_name\", \"identification_documents\", \"other_names\", \"personal_identification_documents\", \"visas\"}, {\"birth_country_descriptor\", \"birth_date\", \"first_name\", \"last_surname\", \"middle_name\", \"identification_documents\", \"other_names\", \"personal_identification_documents\", \"visas\"})\r\nin\r\n  #\"Expanded stg_edfi_students\";\r\nshared stg_edfi_calendar_dates_with_gaps_filled_in = let\r\n  Source = Table.Combine({stg_edfi_calendar_dates, generate_missing_calendar_dates}),\r\n  #\"Appended query\" = Table.Combine({Source, generate_missing_calendar_dates}),\r\n  #\"Filled down\" = Table.FillDown(#\"Appended query\", {\"calendar_code\", \"school_id\", \"rel\", \"calendar_events\", \"school_year.2\"}),\r\n  #\"Grouped rows\" = Table.Group(#\"Filled down\", {\"date\", \"school_year\"}, {{\"Other\", each _, type nullable table[id = nullable text, calendar_code = nullable text, school_id = nullable text, school_year = any, rel = nullable text, date = nullable date, calendar_events = nullable text, school_year.2 = nullable Int64.Type]}}),\r\n  #\"Expanded Other\" = Table.ExpandTableColumn(#\"Grouped rows\", \"Other\", {\"calendar_code\", \"school_id\", \"rel\", \"calendar_events\", \"school_year.2\"}, {\"calendar_code\", \"school_id\", \"rel\", \"calendar_events\", \"school_year.2\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Expanded Other\", {\"date\", \"school_year\", \"calendar_code\", \"school_id\", \"rel\", \"calendar_events\", \"school_year.2\"}),\r\n  #\"Sorted rows\" = Table.Sort(#\"Removed duplicates\", {{\"date\", Order.Ascending}})\r\nin\r\n  #\"Sorted rows\";\r\nshared fct_std_atn_calendar_dates = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_year\", \"school_id\"}, stg_edfi_calendar_dates_with_gaps_filled_in, {\"school_year\", \"school_id\"}, \"stg_edfi_calendar_dates\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_calendar_dates\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_calendar_dates\", {\"date\", \"calendar_events\"}, {\"date\", \"calendar_events\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Expanded stg_edfi_calendar_dates\", each ([date] <> null))\r\nin\r\n  #\"Filtered rows\";\r\nshared fct_std_atn_school_attendance = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_year\", \"student_unique_id\", \"school_id\"}, stg_edfi_student_school_attendance_events, {\"school_year\", \"student_unique_id\", \"school_id\"}, \"stg_edfi_student_school_attendance_events\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_student_school_attendance_events\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_student_school_attendance_events\", {\"session_name\", \"attendance_event_category_descriptor\", \"event_date\", \"attendance_event_reason\"}, {\"session_name\", \"attendance_event_category_descriptor\", \"event_date\", \"attendance_event_reason\"})\r\nin\r\n  #\"Expanded stg_edfi_student_school_attendance_events\";\r\nshared fct_std_atn_section_attendance = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_year\", \"school_id\", \"student_unique_id\"}, stg_edfi_student_section_attendance_events, {\"school_year\", \"school_id\", \"student_unique_id\"}, \"stg_edfi_student_section_attendance_events\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_student_section_attendance_events\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_student_section_attendance_events\", {\"local_course_code\", \"section_identifier\", \"session_name\", \"attendance_event_category_descriptor\", \"event_date\"}, {\"local_course_code\", \"section_identifier\", \"session_name\", \"attendance_event_category_descriptor\", \"event_date\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Expanded stg_edfi_student_section_attendance_events\", {\"id\", \"education_organization_id\", \"graduation_plan_type_descriptor\", \"graduation_school_year\", \"school_id\", \"school_year\", \"student_unique_id\", \"entry_date\", \"entry_grade_level_descriptor\", \"entry_type_descriptor\", \"exit_withdrawl_date\", \"exit_withdraw_type_descriptor\", \"primary_school\", \"repeat_grade_indicator\", \"residency_status_descriptor\", \"school_choice_transfer\", \"alternative_graduation_plans\", \"education_plans\", \"local_course_code\", \"section_identifier\", \"session_name\", \"attendance_event_category_descriptor\", \"event_date\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared fct_std_atn_student_section_associations = let\r\n  Source = fct_std_atn_section_attendance,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_year\", \"school_id\", \"student_unique_id\", \"local_course_code\", \"section_identifier\", \"session_name\"}, stg_edfi_student_section_associations, {\"school_year\", \"school_id\", \"student_unique_id\", \"local_course_code\", \"section_identifier\", \"session_name\"}, \"stg_edfi_student_section_associations\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_student_section_associations\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_student_section_associations\", {\"begin_date\", \"end_date\"}, {\"begin_date\", \"end_date\"})\r\nin\r\n  #\"Expanded stg_edfi_student_section_associations\";\r\nshared fct_std_atn_student_attendance = let\r\n  Source = stg_edfi_student_school_associations,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_id\", \"school_year\"}, stg_edfi_schools, {\"school_id\", \"school_year\"}, \"stg_edfi_schools\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_schools\" = Table.ExpandTableColumn(#\"Merged queries\", \"stg_edfi_schools\", {\"local_education_agency_id\", \"name_of_institution\"}, {\"local_education_agency_id\", \"name_of_institution\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Expanded stg_edfi_schools\", {\"id\", \"education_organization_id\", \"graduation_plan_type_descriptor\", \"graduation_school_year\", \"school_id\", \"school_year\", \"student_unique_id\", \"entry_date\", \"entry_grade_level_descriptor\", \"entry_type_descriptor\", \"exit_withdrawl_date\", \"exit_withdraw_type_descriptor\", \"primary_school\", \"repeat_grade_indicator\", \"residency_status_descriptor\", \"school_choice_transfer\", \"alternative_graduation_plans\", \"education_plans\", \"local_education_agency_id\", \"name_of_institution\"}),\r\n  #\"Merged queries 1\" = Table.NestedJoin(#\"Removed duplicates\", {\"school_id\", \"school_year\", \"student_unique_id\"}, stg_edfi_student_school_attendance_events, {\"school_id\", \"school_year\", \"student_unique_id\"}, \"stg_edfi_student_school_attendance_events\", JoinKind.LeftOuter),\r\n  #\"Expanded stg_edfi_student_school_attendance_events\" = Table.ExpandTableColumn(#\"Merged queries 1\", \"stg_edfi_student_school_attendance_events\", {\"attendance_event_category_descriptor\", \"event_date\", \"attendance_event_reason\"}, {\"attendance_event_category_descriptor\", \"event_date\", \"attendance_event_reason\"}),\r\n  #\"Removed duplicates 1\" = Table.Distinct(#\"Expanded stg_edfi_student_school_attendance_events\", {\"id\", \"education_organization_id\", \"graduation_plan_type_descriptor\", \"graduation_school_year\", \"school_id\", \"school_year\", \"student_unique_id\", \"entry_date\", \"entry_grade_level_descriptor\", \"entry_type_descriptor\", \"exit_withdrawl_date\", \"exit_withdraw_type_descriptor\", \"primary_school\", \"repeat_grade_indicator\", \"residency_status_descriptor\", \"school_choice_transfer\", \"alternative_graduation_plans\", \"education_plans\", \"local_education_agency_id\", \"name_of_institution\", \"attendance_event_category_descriptor\", \"event_date\", \"attendance_event_reason\"}),\r\n  #\"Merged queries 2\" = Table.NestedJoin(#\"Removed duplicates 1\", {\"school_id\", \"school_year\", \"student_unique_id\", \"event_date\"}, fct_std_atn_calendar_dates, {\"school_id\", \"school_year\", \"student_unique_id\", \"date\"}, \"fct_std_atn_calendar_dates\", JoinKind.LeftOuter),\r\n  #\"Expanded fct_std_atn_calendar_dates\" = Table.ExpandTableColumn(#\"Merged queries 2\", \"fct_std_atn_calendar_dates\", {\"date\", \"calendar_events\"}, {\"date\", \"calendar_events\"}),\r\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Expanded fct_std_atn_calendar_dates\", \"reported_as_present_at_school\", each if [attendance_event_category_descriptor] = \"In Attendance\" then 1 else 0),\r\n  #\"Inserted conditional column 1\" = Table.AddColumn(#\"Inserted conditional column\", \"reported_as_absent_from_school\", each if [attendance_event_category_descriptor] <> \"In Attendance\" then 1 else 0),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Inserted conditional column 1\", \"local_education_agency_key\", each [local_education_agency_id] & \"_\" & Text.From([school_year])), {{\"local_education_agency_key\", type text}}),\r\n  #\"Added custom 1\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom\", \"student_key\", each [student_unique_id] & \"_\" & Text.From([school_year])), {{\"student_key\", type text}}),\r\n  #\"Added custom 2\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom 1\", \"school_key\", each [school_id] & \"_\" & Text.From([school_year])), {{\"school_key\", type text}}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Added custom 2\", each ([calendar_events] <> null))\r\nin\r\n  #\"Filtered rows\";\r\nshared generate_missing_calendar_dates = let\r\n  StartDate = List.Min(sessions[session_begin_date]),\r\n  EndDate = List.Max(sessions[session_end_date]),\r\n  NumberOfDates = Duration.Days(EndDate-StartDate)+1,\r\n  DateList = List.Dates(StartDate, NumberOfDates, #duration(1, 0, 0, 0)),\r\n  TableFromList = Table.FromList(DateList, Splitter.SplitByNothing(), {\"date\"}, null, ExtraValues.Error),\r\n  ChangedType = Table.TransformColumnTypes(TableFromList, {{\"date\", type date}}),\r\n  Inserted_conditional_column = Table.AddColumn(ChangedType, \"school_year\", each if Date.Month([date]) >= 1 and Date.Month([date])<=6 then Date.Year([date]) else Date.Year([date])+1)\r\nin\r\n  Inserted_conditional_column;\r\nshared dates = let\r\n  Source = stg_edfi_calendar_dates,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"date\", \"school_year\"}),\r\n  #\"Appended query\" = Table.Combine({#\"Removed other columns\", generate_missing_calendar_dates}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Appended query\", {\"date\", \"school_year\"}),\r\n  #\"Sorted rows\" = Table.Sort(#\"Removed duplicates\", {{\"date\", Order.Ascending}})\r\nin\r\n  #\"Sorted rows\";\r\nshared stg_edfi_graduation_plans = let\r\n  Source = PowerPlatform.Dataflows([]),\r\n  #\"Navigation 1\" = Source{[Id = \"Workspaces\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[workspaceName = WorkspaceName]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[dataflowName = DataflowName]}[Data],\r\n  #\"Navigation 4\" = try #\"Navigation 3\"{[entity = \"stg_edfi_graduation_plans\", version = \"\"]}[Data] catch (r)=> if r[Message] = \"The key didn't match any rows in the table.\" then r else if r[HasError] = false then r[Table] else \"There was an unaccounted for error. Please troubleshoot.\"\r\nin\r\n  #\"Navigation 4\";\r\nshared #\"stg_edfi_student_school_associations (2)\" = let\n  Source = stg_edfi_student_school_associations,\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"school_id\", \"school_year\"}, stg_edfi_schools, {\"school_id\", \"school_year\"}, \"stg_edfi_schools\", JoinKind.LeftOuter),\n  #\"Merged queries 1\" = Table.NestedJoin(#\"Merged queries\", {\"school_year\", \"school_id\"}, stg_edfi_calendar_dates_with_gaps_filled_in, {\"school_year\", \"school_id\"}, \"stg_edfi_calendar_dates_with_gaps_filled_in\", JoinKind.LeftOuter),\n  #\"Added custom\" = Table.AddColumn(#\"Merged queries 1\", \"Custom\", each stg_edfi_calendar_dates_with_gaps_filled_in),\n  #\"Expanded stg_edfi_schools\" = Table.ExpandTableColumn(#\"Added custom\", \"stg_edfi_schools\", {\"local_education_agency_id\"}, {\"local_education_agency_id\"}),\n  #\"Added custom 1\" = Table.TransformColumnTypes(Table.AddColumn(#\"Expanded stg_edfi_schools\", \"student_key\", each [student_unique_id] & \"_\" & Text.From([school_year])), {{\"student_key\", type text}}),\n  #\"Added custom 2\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom 1\", \"local_education_agency_key\", each [local_education_agency_id] & \"_\" & Text.From([school_year])), {{\"local_education_agency_key\", type text}}),\n  #\"Added custom 3\" = Table.TransformColumnTypes(Table.AddColumn(#\"Added custom 2\", \"school_key\", each [school_id] & \"_\" & Text.From([school_year])), {{\"school_key\", type text}}),\n  #\"Renamed columns\" = Table.RenameColumns(#\"Added custom 3\", {{\"entry_grade_level_descriptor\", \"grade_level\"}}),\n  #\"Duplicated column\" = Table.DuplicateColumn(#\"Renamed columns\", \"grade_level\", \"grade_level - Copy\"),\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Duplicated column\", {{\"grade_level - Copy\", \"grade_level_id\"}, {\"entry_date\", \"enrollment_date\"}, {\"entry_type_descriptor\", \"enrollment_type\"}, {\"exit_withdrawl_date\", \"exit_date\"}, {\"exit_withdraw_type_descriptor\", \"exit_type\"}, {\"primary_school\", \"is_primary_school\"}}),\n  current_date = DateTime.Date(DateTime.LocalNow()),\n  #\"Inserted conditional column\" = Table.TransformColumnTypes(Table.AddColumn(#\"Renamed columns 1\", \"is_actively_enrolled_in_school\", each if [exit_date] = null then 1 else if [enrollment_date] <= current_date then 1 else if current_date < [exit_date] then 1 else 0), {{\"is_actively_enrolled_in_school\", type logical}}),\r\n  #\"Expanded stg_edfi_calendar_dates_with_gaps_filled_in\" = Table.ExpandTableColumn(#\"Inserted conditional column\", \"stg_edfi_calendar_dates_with_gaps_filled_in\", {\"date\"}, {\"date\"})\nin\n  #\"Expanded stg_edfi_calendar_dates_with_gaps_filled_in\";\r\n",
        "connectionOverrides": [
            {
                "path": "PowerBI",
                "kind": "PowerBI",
                "provider": "CdsA",
                "authenticationKind": null,
                "environmentName": null,
                "apiName": null,
                "connectionName": "{\"kind\":\"PowerBI\",\"path\":\"PowerBI\"}",
                "audience": null
            },
            {
                "path": "PowerPlatformDataflows",
                "kind": "PowerPlatformDataflows",
                "provider": "CdsA",
                "authenticationKind": null,
                "environmentName": null,
                "apiName": null,
                "connectionName": "{\"kind\":\"PowerPlatformDataflows\",\"path\":\"PowerPlatformDataflows\"}",
                "audience": null
            },
            {
                "path": "xg4ihbmlozwebchjrquvzlnjmm-uzydirdaeqmepesjvo5bsx3ghi.datamart.pbidedicated.windows.net;db_powerbiprodnam_20221221_07161888_29c6",
                "kind": "SQL",
                "provider": "CdsA",
                "authenticationKind": null,
                "environmentName": null,
                "apiName": null,
                "connectionName": "{\"kind\":\"SQL\",\"path\":\"xg4ihbmlozwebchjrquvzlnjmm-uzydirdaeqmepesjvo5bsx3ghi.datamart.pbidedicated.windows.net;db_powerbiprodnam_20221221_07161888_29c6\"}",
                "audience": null
            },
            {
                "path": "AIInsightsInProc",
                "kind": "AIInsightsInProc",
                "provider": "CdsA",
                "authenticationKind": null,
                "environmentName": null,
                "apiName": null,
                "connectionName": "{\"kind\":\"AIInsightsInProc\",\"path\":\"AIInsightsInProc\"}",
                "audience": null
            },
            {
                "path": "AIFunctions",
                "kind": "AIFunctions",
                "provider": "CdsA",
                "authenticationKind": null,
                "environmentName": null,
                "apiName": null,
                "connectionName": "{\"kind\":\"AIFunctions\",\"path\":\"AIFunctions\"}",
                "audience": null
            }
        ]
    },
    "annotations": [
        {
            "name": "pbi:QueryGroups",
            "value": "[{\"id\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"name\":\"transformations\",\"description\":\"\",\"parentId\":\"281c8544-9d6b-4ffd-a278-c6c2db949a09\",\"order\":0},{\"id\":\"a541fe00-19df-44cf-a9d3-55d425a27ef9\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":0},{\"id\":\"e6f3944a-d808-4125-b475-3b2a2d4b8085\",\"name\":\"dim_student\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":0},{\"id\":\"2391ae51-b8d9-4a65-b44a-61bccd37e3a5\",\"name\":\"dim_local_education_agency\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":1},{\"id\":\"18259935-88e8-480d-b5a9-b95688f92b2a\",\"name\":\"dim_school\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":2},{\"id\":\"e7ca55ad-66cc-4336-81f2-ea42a242ed31\",\"name\":\"Ed-Fi\",\"description\":\"\",\"parentId\":\"9c911267-475c-4d2b-8f66-85d240c49fb3\",\"order\":0},{\"id\":\"9c911267-475c-4d2b-8f66-85d240c49fb3\",\"name\":\"Linked Dataflows\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"2866a102-6fad-4a0f-83ce-028b2d6aefcb\",\"name\":\"marts\",\"description\":\"\",\"parentId\":null,\"order\":3},{\"id\":\"281c8544-9d6b-4ffd-a278-c6c2db949a09\",\"name\":\"Core\",\"description\":\"\",\"parentId\":\"2866a102-6fad-4a0f-83ce-028b2d6aefcb\",\"order\":1},{\"id\":\"c4ad7165-85e5-405e-830b-3d86aadae3c0\",\"name\":\"dim_sessions\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":3},{\"id\":\"4e73c292-fefd-4d0c-aca0-41359702fe1a\",\"name\":\"fct_student_attendance\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":5},{\"id\":\"57d85ec6-523e-4397-96fa-2ece488f9d69\",\"name\":\"dim_date\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":4},{\"id\":\"a9174444-d060-4af6-8ae2-32201fba6f5c\",\"name\":\"fct_student_school\",\"description\":\"\",\"parentId\":\"d4022b6b-d574-49aa-b173-78b44d2f456b\",\"order\":6}]"
        }
    ],
    "entities": [
        {
            "$type": "LocalEntity",
            "name": "dim_student",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "dim_student.csv"
            },
            "attributes": [
                {
                    "name": "student_key",
                    "dataType": "string"
                },
                {
                    "name": "school_year",
                    "dataType": "int64"
                },
                {
                    "name": "student_unique_id",
                    "dataType": "string"
                },
                {
                    "name": "student_first_name",
                    "dataType": "string"
                },
                {
                    "name": "student_middle_name",
                    "dataType": "string"
                },
                {
                    "name": "student_last_surname",
                    "dataType": "string"
                },
                {
                    "name": "student_display_name",
                    "dataType": "string"
                },
                {
                    "name": "is_actively_enrolled_in_school",
                    "dataType": "string"
                },
                {
                    "name": "grade_level",
                    "dataType": "string"
                },
                {
                    "name": "grade_level_id",
                    "dataType": "string"
                },
                {
                    "name": "race_and_ethnicity_roll_up",
                    "dataType": "string"
                },
                {
                    "name": "gender",
                    "dataType": "string"
                },
                {
                    "name": "birth_date",
                    "dataType": "date"
                },
                {
                    "name": "limited_english_proficiency",
                    "dataType": "string"
                },
                {
                    "name": "is_english_language_learner",
                    "dataType": "string"
                },
                {
                    "name": "in_special_education_program",
                    "dataType": "string"
                },
                {
                    "name": "is_hispanic",
                    "dataType": "string"
                },
                {
                    "name": "email",
                    "dataType": "string"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:49.0249537+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/dim_student.csv?snapshot=2023-02-10T14%3A56%3A49.0022946Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "dim_local_education_agency",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "dim_local_education_agency.csv"
            },
            "attributes": [
                {
                    "name": "local_education_agency_key",
                    "dataType": "string"
                },
                {
                    "name": "school_year",
                    "dataType": "int64"
                },
                {
                    "name": "local_education_agency_id",
                    "dataType": "string"
                },
                {
                    "name": "local_education_agency_name",
                    "dataType": "string"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:44.7437645+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/dim_local_education_agency.csv?snapshot=2023-02-10T14%3A56%3A44.7117600Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "dim_schools",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "dim_schools.csv"
            },
            "attributes": [
                {
                    "name": "school_key",
                    "dataType": "string"
                },
                {
                    "name": "local_education_agency_key",
                    "dataType": "string"
                },
                {
                    "name": "school_year",
                    "dataType": "int64"
                },
                {
                    "name": "school_id",
                    "dataType": "string"
                },
                {
                    "name": "school_name",
                    "dataType": "string"
                },
                {
                    "name": "school_type",
                    "dataType": "string"
                },
                {
                    "name": "local_education_agency_name",
                    "dataType": "string"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:45.4937358+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/dim_schools.csv?snapshot=2023-02-10T14%3A56%3A45.4813199Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "dim_sessions",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "dim_sessions.csv"
            },
            "attributes": [
                {
                    "name": "session_key",
                    "dataType": "string"
                },
                {
                    "name": "school_key",
                    "dataType": "string"
                },
                {
                    "name": "school_year",
                    "dataType": "int64"
                },
                {
                    "name": "school_year_name",
                    "dataType": "string"
                },
                {
                    "name": "session_name",
                    "dataType": "string"
                },
                {
                    "name": "term_name",
                    "dataType": "string"
                },
                {
                    "name": "total_instructional_days",
                    "dataType": "int64"
                },
                {
                    "name": "session_begin_date",
                    "dataType": "date"
                },
                {
                    "name": "session_end_date",
                    "dataType": "date"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:45.3374789+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/dim_sessions.csv?snapshot=2023-02-10T14%3A56%3A45.3094180Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "dim_date",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "dim_date.csv"
            },
            "attributes": [
                {
                    "name": "date",
                    "dataType": "date"
                },
                {
                    "name": "school_year",
                    "dataType": "string"
                },
                {
                    "name": "day",
                    "dataType": "string"
                },
                {
                    "name": "month_name",
                    "dataType": "string"
                },
                {
                    "name": "month",
                    "dataType": "int64"
                },
                {
                    "name": "calendar_quarter",
                    "dataType": "int64"
                },
                {
                    "name": "Custom",
                    "dataType": "string"
                },
                {
                    "name": "month_sort_order",
                    "dataType": "string"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:46.0406079+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/dim_date.csv?snapshot=2023-02-10T14%3A56%3A46.0180095Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "fct_student_attendance",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "fct_student_attendance.csv"
            },
            "attributes": [
                {
                    "name": "local_education_agency_key",
                    "dataType": "string"
                },
                {
                    "name": "school_key",
                    "dataType": "string"
                },
                {
                    "name": "student_key",
                    "dataType": "string"
                },
                {
                    "name": "date",
                    "dataType": "date"
                },
                {
                    "name": "attendance_event_category_descriptor",
                    "dataType": "string"
                },
                {
                    "name": "reported_as_absent_from_school",
                    "dataType": "string"
                },
                {
                    "name": "reported_as_present_at_school",
                    "dataType": "string"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:56:52.2281018+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/fct_student_attendance.csv?snapshot=2023-02-10T14%3A56%3A52.2064569Z"
                }
            ]
        },
        {
            "$type": "LocalEntity",
            "name": "fct_student_school",
            "description": "",
            "pbi:refreshPolicy": {
                "$type": "FullRefreshPolicy",
                "location": "fct_student_school.csv"
            },
            "attributes": [
                {
                    "name": "student_key",
                    "dataType": "string"
                },
                {
                    "name": "local_education_agency_key",
                    "dataType": "string"
                },
                {
                    "name": "school_key",
                    "dataType": "string"
                },
                {
                    "name": "grade_level",
                    "dataType": "string"
                },
                {
                    "name": "grade_level_id",
                    "dataType": "string"
                },
                {
                    "name": "enrollment_date",
                    "dataType": "date"
                },
                {
                    "name": "date",
                    "dataType": "date"
                },
                {
                    "name": "enrollment_type",
                    "dataType": "string"
                },
                {
                    "name": "exit_date",
                    "dataType": "date"
                },
                {
                    "name": "exit_type",
                    "dataType": "string"
                },
                {
                    "name": "is_primary_school",
                    "dataType": "boolean"
                },
                {
                    "name": "is_actively_enrolled_in_school",
                    "dataType": "boolean"
                }
            ],
            "partitions": [
                {
                    "name": "FullRefreshPolicyPartition",
                    "refreshTime": "2023-02-10T14:57:50.0557608+00:00",
                    "location": "https://wabiuseapcdsap1.blob.core.windows.net:443/a26dfceb-9707-4ac7-891b-d88f73b32b09/fct_student_school.csv?snapshot=2023-02-10T14%3A57%3A50.0272338Z"
                }
            ]
        }
    ]
}