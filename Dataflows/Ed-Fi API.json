{"name":"Ed-Fi API","description":"Using this one to try and account for all Ed-Fi API modes","version":"1.0","culture":"en-US","modifiedTime":"2023-03-27T16:03:52.8168853+00:00","ppdf:outputFileFormat":"Csv","pbi:mashup":{"fastCombine":true,"allowNativeQueries":false,"queriesMetadata":{"key":{"queryId":"5a02eb02-d89d-4054-8210-70d4e6058708","queryName":"key","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"secret":{"queryId":"071abab1-f3fa-4758-b0c9-40084c944b0e","queryName":"secret","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"org_url":{"queryId":"a1f84fa8-684f-497a-9dfa-28983577f672","queryName":"org_url","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"base_uri":{"queryId":"917c751f-9449-4d3a-b635-7fe3dd4aa729","queryName":"base_uri","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"instance":{"queryId":"be169446-7551-40a6-b607-a0d86fdd12a7","queryName":"instance","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"schoolyear":{"queryId":"4a43945e-84e4-465f-b9f5-691ede77c84e","queryName":"schoolyear","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"page_limit":{"queryId":"d1ed9c06-985c-438b-a12a-7928229755b8","queryName":"page_limit","queryGroupId":"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5"},"retrieveFromAPI":{"queryId":"6098bd4e-2fe1-4864-af34-fbd10798f3d9","queryName":"retrieveFromAPI","queryGroupId":"e6ce9be2-5ad5-4b60-9ac5-4b73ecccdd68"},"CalendarDates":{"queryId":"af7df57a-2d18-4ccc-85b9-ae0018d70c5b","queryName":"CalendarDates","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Courses":{"queryId":"86146526-069c-4a81-8abc-6fadb7964dba","queryName":"Courses","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"CourseTranscripts":{"queryId":"259f05a8-b263-4232-8e0d-94dcbff5c59a","queryName":"CourseTranscripts","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Grades":{"queryId":"7cfc2260-2ce5-4b0f-92a4-123ef55090a2","queryName":"Grades","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"GradingPeriods":{"queryId":"381504b1-e670-4171-b9f7-2e6ed82b5852","queryName":"GradingPeriods","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"GraduationPlans":{"queryId":"91ade9cd-11c8-48e0-9668-83aad9aeec2c","queryName":"GraduationPlans","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"LocalEducationAgencies":{"queryId":"a302fd8e-44d8-4425-914f-bd2945bee8b9","queryName":"LocalEducationAgencies","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Programs":{"queryId":"5c38fc51-a638-4316-9615-ee77162ccd6b","queryName":"Programs","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Schools":{"queryId":"f0347eaa-f1b7-44df-9ad0-466fc1676a48","queryName":"Schools","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"SchoolYearTypes":{"queryId":"71b9f3af-8d92-4ba8-a458-7bebcee22f2a","queryName":"SchoolYearTypes","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Sections":{"queryId":"eac87e03-2012-4279-a016-e48fafe616ed","queryName":"Sections","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Sessions":{"queryId":"7058bdfd-067b-4228-b3d9-3af147fcd36f","queryName":"Sessions","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"Students":{"queryId":"9e1fa8ab-9025-4d51-8e6e-ef8dfbc35cab","queryName":"Students","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentAcademicRecords":{"queryId":"1e8c42a2-c86d-42e7-8575-f50af7d296a9","queryName":"StudentAcademicRecords","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentEduOrgAssoc_Source":{"queryId":"c23dc340-15b6-407d-9587-5bdae1b8bf67","queryName":"StudentEduOrgAssoc_Source","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193"},"StudentEducationOrganizationAssociations":{"queryId":"3db43e58-39b9-4a67-a01d-cd83e5ac2e0e","queryName":"StudentEducationOrganizationAssociations","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentIdentificationCodes":{"queryId":"23fd1ba2-da34-4530-8450-a2438c18d2ce","queryName":"StudentIdentificationCodes","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentProgramAssociations":{"queryId":"0af292f6-bcc8-40e1-9847-93250e55b49b","queryName":"StudentProgramAssociations","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentSectionAttendanceEvents":{"queryId":"ab9479ef-bc1c-433f-a365-4c8896d94074","queryName":"StudentSectionAttendanceEvents","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentSchoolAssociations":{"queryId":"4bd5dd25-cf67-4407-970a-a4a855ba2215","queryName":"StudentSchoolAssociations","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentSchoolAttendanceEvents":{"queryId":"81cddb55-1173-4afa-847e-2cb70cab3fda","queryName":"StudentSchoolAttendanceEvents","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentSectionAssociations":{"queryId":"2fded90d-46ae-42b6-804d-eed4cb8eae0e","queryName":"StudentSectionAssociations","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"StudentSpecialEducationProgramAssociations":{"queryId":"ef602d10-1b73-43db-81f3-2d0fc1402850","queryName":"StudentSpecialEducationProgramAssociations","queryGroupId":"4996957d-e4ae-4638-b297-be8ce3f37193","loadEnabled":true},"jsonSchema":{"queryId":"89fb9590-e04c-44d1-8cd0-26fa0e8421bf","queryName":"jsonSchema","queryGroupId":"e6ce9be2-5ad5-4b60-9ac5-4b73ecccdd68"}},"document":"section Section1;\r\nshared key = \"RvcohKz9zHI4\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\nshared secret = \"E1iEFusaNf81xzCxwHfbolkC\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n[Description = \"Url of the organization used in the API call\"]\r\nshared org_url = \"https://api.ed-fi.org/\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type any];\r\n[Description = \"https://techdocs.ed-fi.org/display/ODSAPIS3V61/API+Routes\"]\r\nshared base_uri = \"v5.2/api/data/v3/\" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text];\r\n[Description = \"This parameter is only used when the ODS/API is configured to be in \"\"Instance-Year-Specific\"\" mode.#(lf)https://techdocs.ed-fi.org/display/ODSAPIS3V53/Instance-Year-Specific+ODS+Configuration\"]\r\nshared instance = \"\" meta [IsParameterQuery = true, IsParameterQueryRequired = false, Type = type any];\r\nshared schoolyear = null meta [IsParameterQuery = true, IsParameterQueryRequired = false, Type = type number];\r\nshared page_limit = 500 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number];\r\nshared retrieveFromAPI = (endpoint as text, optional schoolyear as number) =>\n  let\n    // Concatenate the key & secret parameters and convert to base64\n    authKey = \"Basic \" & Binary.ToText(Text.ToBinary(Text.Combine({key, secret}, \":\")), 0), \n    // Post our key/secret to our Ed-Fi API's authorization URL\n    getToken = (n) =>\n      let\n        web_contents = Web.Contents(org_url, \n          [\n            Headers = [\n              #\"Authorization\" = authKey, \n              #\"Content-Type\"  = \"application/x-www-form-urlencoded;charset=UTF-8\", \n              #\"MyHeader\"      = Text.From(n)\n            ], \n            Content = Text.ToBinary(\"grant_type=client_credentials\"),\n            RelativePath = Text.Combine({Text.Replace(base_uri, \"data/v3/\", \"\"),instance,\"/oauth/token\"})\n          ]\n        ), \n        contents_as_json = Json.Document(web_contents), \n        // Retrieve the token from the JSON response\n        access_token = contents_as_json[access_token]\n      in\n        access_token, \n    retrieveRecords = (endpoint, schoolyear) =>\n      let\n        getHeaderTime = () =>\n          Time.ToText(\n            Time.From(Number.RoundDown(96 * Number.From(Time.From(DateTime.LocalNow())) / 1) / 96)\n          ), \n        // Using the token, retrieve our data from the API\n        retrieveRecordSet = (endpoint, access_token, offset) =>\n          let\n            relative_path = Text.Combine({\n              base_uri,\n              if instance = \"\" then \"\" else Text.Combine({instance,\"/\"}),\n              if Value.Is(schoolyear, type null) then \"\" else Text.From(schoolyear),\n              if (Value.Is(schoolyear, type null) or instance = \"\") then \"ed-fi/\" else \"/ed-fi/\",\n              endpoint, \n              \"?offset=\",\n               Text.From(offset),\n               \"&limit=\",\n               Text.From(page_limit)\n              //  \"&schoolYear=\",\n              //  Text.From(schoolyear)\n            }),\n\n\n            \n            GetJsonQuery = Web.Contents(\n              org_url, \n              [Headers = [#\"Authorization\" = \"bearer \" & access_token],\n              RelativePath = relative_path]\n            ), \n            // Convert the response to a table\n            FormatAsJsonQuery = Table.FromList(\n              Json.Document(GetJsonQuery), \n              Splitter.SplitByNothing(), \n              null, \n              null, \n              ExtraValues.Error\n            ),\n          \n\n          result = try FormatAsJsonQuery[Column1] otherwise null\n          in \n          result,\n        \n      record_set = List.Generate(\n          () => [i = 0, res = retrieveRecordSet(endpoint, getToken(getHeaderTime()), i)], \n          each [res] <> null, \n          each [i = [i] + page_limit, res = retrieveRecordSet(endpoint, getToken(getHeaderTime()), i)], \n          each [res]\n        ),\n\n      record_table = Table.FromList(record_set, Splitter.SplitByNothing(), null, null, ExtraValues.Error)\n      //all_records_expanded = Table.ExpandListColumn(record_table, \"Column1\")\n      //,test = \n\n      in\n        //all_records_expanded\n        record_table\n        //record_set\n        //test\n\n        \n  in\n    retrieveRecords(endpoint, schoolyear);\r\nshared CalendarDates = let\n  resourceName = \"calendarDates\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"calendarReference\", \"date\", \"calendarEvents\"}, {\"id\", \"calendarReference\", \"date\", \"calendarEvents\"}),\n  #\"Expanded calendarReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"calendarReference\", {\"calendarCode\", \"schoolId\", \"schoolYear\", \"link\"}, {\"calendarCode\", \"schoolId\", \"schoolYear\", \"link\"}),\n  #\"Expanded link\" = Table.ExpandRecordColumn(#\"Expanded calendarReference\", \"link\", {\"rel\"}, {\"rel\"}),\n  #\"Expanded calendarEvents\" = Table.ExpandListColumn(#\"Expanded link\", \"calendarEvents\"),\n  #\"Expanded calendarEvents 1\" = Table.ExpandRecordColumn(#\"Expanded calendarEvents\", \"calendarEvents\", {\"calendarEventDescriptor\"}, {\"calendarEventDescriptor\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded calendarEvents 1\", {{\"calendarEventDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"calendarCode\", type text}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"rel\", type text}, {\"date\", type date}, {\"calendarEventDescriptor\", type text}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared Courses = let\n  resourceName = \"courses\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"academicSubjectDescriptor\", \"courseCode\", \"courseDescription\", \"courseTitle\", \"numberOfParts\", \"competencyLevels\", \"identificationCodes\", \"learningObjectives\", \"learningStandards\", \"levelCharacteristics\", \"offeredGradeLevels\"}, {\"id\", \"educationOrganizationReference\", \"academicSubjectDescriptor\", \"courseCode\", \"courseDescription\", \"courseTitle\", \"numberOfParts\", \"competencyLevels\", \"identificationCodes\", \"learningObjectives\", \"learningStandards\", \"levelCharacteristics\", \"offeredGradeLevels\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded competencyLevels\" = Table.ExpandListColumn(#\"Expanded educationOrganizationReference\", \"competencyLevels\"),\n  #\"Expanded identificationCodes\" = Table.ExpandListColumn(#\"Expanded competencyLevels\", \"identificationCodes\"),\n  #\"Expanded identificationCodes 1\" = Table.ExpandRecordColumn(#\"Expanded identificationCodes\", \"identificationCodes\", {\"courseIdentificationSystemDescriptor\", \"assigningOrganizationIdentificationCode\", \"identificationCode\"}, {\"courseIdentificationSystemDescriptor\", \"assigningOrganizationIdentificationCode\", \"identificationCode\"}),\n  #\"Expanded learningObjectives\" = Table.ExpandListColumn(#\"Expanded identificationCodes 1\", \"learningObjectives\"),\n  #\"Expanded learningStandards\" = Table.ExpandListColumn(#\"Expanded learningObjectives\", \"learningStandards\"),\n  #\"Expanded levelCharacteristics\" = Table.ExpandListColumn(#\"Expanded learningStandards\", \"levelCharacteristics\"),\n  #\"Expanded levelCharacteristics 1\" = Table.ExpandRecordColumn(#\"Expanded levelCharacteristics\", \"levelCharacteristics\", {\"courseLevelCharacteristicDescriptor\"}, {\"courseLevelCharacteristicDescriptor\"}),\n  #\"Expanded offeredGradeLevels\" = Table.ExpandListColumn(#\"Expanded levelCharacteristics 1\", \"offeredGradeLevels\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded offeredGradeLevels\", {{\"courseIdentificationSystemDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"academicSubjectDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"courseLevelCharacteristicDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"courseCode\", type text}, {\"courseTitle\", type text}, {\"numberOfParts\", Int64.Type}, {\"competencyLevels\", type any}, {\"courseIdentificationSystemDescriptor\", type text}, {\"assigningOrganizationIdentificationCode\", type text}, {\"identificationCode\", type text}, {\"learningObjectives\", type any}, {\"learningStandards\", type any}, {\"courseLevelCharacteristicDescriptor\", type text}, {\"offeredGradeLevels\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"competencyLevels\", type text}, {\"learningObjectives\", type text}, {\"learningStandards\", type text}, {\"offeredGradeLevels\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"competencyLevels\", null}, {\"learningObjectives\", null}, {\"learningStandards\", null}, {\"offeredGradeLevels\", null}}),\n  #\"Transform columns 1\" = Table.TransformColumnTypes(#\"Replace errors\", {{\"courseDescription\", type text}}),\n  #\"Replace errors 1\" = Table.ReplaceErrorValues(#\"Transform columns 1\", {{\"courseDescription\", null}})\nin\n  #\"Replace errors 1\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared CourseTranscripts = let\n  resourceName = \"courseTranscripts\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"courseReference\", \"studentAcademicRecordReference\", \"courseAttemptResultDescriptor\", \"attemptedCredits\", \"earnedCredits\", \"finalLetterGradeEarned\", \"academicSubjects\", \"alternativeCourseIdentificationCodes\", \"creditCategories\", \"earnedAdditionalCredits\"}, {\"id\", \"courseReference\", \"studentAcademicRecordReference\", \"courseAttemptResultDescriptor\", \"attemptedCredits\", \"earnedCredits\", \"finalLetterGradeEarned\", \"academicSubjects\", \"alternativeCourseIdentificationCodes\", \"creditCategories\", \"earnedAdditionalCredits\"}),\n  #\"Expanded courseReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"courseReference\", {\"courseCode\", \"educationOrganizationId\"}, {\"courseCode\", \"educationOrganizationId\"}),\n  #\"Expanded studentAcademicRecordReference\" = Table.ExpandRecordColumn(#\"Expanded courseReference\", \"studentAcademicRecordReference\", {\"schoolYear\", \"studentUniqueId\", \"termDescriptor\"}, {\"schoolYear\", \"studentUniqueId\", \"termDescriptor\"}),\n  #\"Expanded academicSubjects\" = Table.ExpandListColumn(#\"Expanded studentAcademicRecordReference\", \"academicSubjects\"),\n  #\"Expanded alternativeCourseIdentificationCodes\" = Table.ExpandListColumn(#\"Expanded academicSubjects\", \"alternativeCourseIdentificationCodes\"),\n  #\"Expanded alternativeCourseIdentificationCodes 1\" = Table.ExpandRecordColumn(#\"Expanded alternativeCourseIdentificationCodes\", \"alternativeCourseIdentificationCodes\", {\"courseIdentificationSystemDescriptor\", \"assigningOrganizationIdentificationCode\", \"identificationCode\"}, {\"courseIdentificationSystemDescriptor\", \"assigningOrganizationIdentificationCode\", \"identificationCode\"}),\n  #\"Expanded creditCategories\" = Table.ExpandListColumn(#\"Expanded alternativeCourseIdentificationCodes 1\", \"creditCategories\"),\n  #\"Expanded earnedAdditionalCredits\" = Table.ExpandListColumn(#\"Expanded creditCategories\", \"earnedAdditionalCredits\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded earnedAdditionalCredits\", {{\"termDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"courseAttemptResultDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"courseIdentificationSystemDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"courseCode\", type text}, {\"educationOrganizationId\", type text}, {\"schoolYear\", type text}, {\"studentUniqueId\", type text}, {\"attemptedCredits\", type text}, {\"earnedCredits\", type text}, {\"finalLetterGradeEarned\", type text}, {\"academicSubjects\", type text}, {\"assigningOrganizationIdentificationCode\", type text}, {\"identificationCode\", type text}, {\"creditCategories\", type text}, {\"earnedAdditionalCredits\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"id\", null}, {\"courseCode\", null}, {\"educationOrganizationId\", null}, {\"schoolYear\", null}, {\"studentUniqueId\", null}, {\"attemptedCredits\", null}, {\"earnedCredits\", null}, {\"finalLetterGradeEarned\", null}, {\"academicSubjects\", null}, {\"assigningOrganizationIdentificationCode\", null}, {\"identificationCode\", null}, {\"creditCategories\", null}, {\"earnedAdditionalCredits\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared Grades = let\n  resourceName = \"grades\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\",  \"Column1\", {\"id\", \"gradingPeriodReference\", \"studentSectionAssociationReference\", \"gradeTypeDescriptor\", \"letterGradeEarned\", \"numericGradeEarned\"}, {\"id\", \"gradingPeriodReference\", \"studentSectionAssociationReference\", \"gradeTypeDescriptor\", \"letterGradeEarned\", \"numericGradeEarned\"}),\n  #\"Expanded gradingPeriodReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"gradingPeriodReference\", {\"gradingPeriodDescriptor\", \"periodSequence\", \"schoolId\", \"schoolYear\"}, {\"gradingPeriodDescriptor\", \"periodSequence\", \"schoolId\", \"schoolYear\"}),\n  #\"Expanded studentSectionAssociationReference\" = Table.ExpandRecordColumn(#\"Expanded gradingPeriodReference\", \"studentSectionAssociationReference\", {\"beginDate\", \"localCourseCode\", \"sectionIdentifier\", \"sessionName\", \"studentUniqueId\"}, {\"beginDate\", \"localCourseCode\", \"sectionIdentifier\", \"sessionName\", \"studentUniqueId\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded studentSectionAssociationReference\", {{\"gradingPeriodDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"gradeTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"gradingPeriodDescriptor\", type text}, {\"periodSequence\", Int64.Type}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"beginDate\", type datetime}, {\"localCourseCode\", type text}, {\"sectionIdentifier\", type text}, {\"sessionName\", type text}, {\"studentUniqueId\", type text}, {\"gradeTypeDescriptor\", type text}, {\"letterGradeEarned\", type text}, {\"numericGradeEarned\", Int64.Type}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared GradingPeriods = let\n  resourceName = \"gradingPeriods\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"schoolReference\", \"schoolYearTypeReference\", \"gradingPeriodDescriptor\", \"periodSequence\", \"beginDate\", \"endDate\", \"totalInstructionalDays\"}, {\"id\", \"schoolReference\", \"schoolYearTypeReference\", \"gradingPeriodDescriptor\", \"periodSequence\", \"beginDate\", \"endDate\", \"totalInstructionalDays\"}),\n  #\"Expanded schoolReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"schoolReference\", {\"schoolId\"}, {\"schoolId\"}),\n  #\"Expanded schoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded schoolReference\", \"schoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded schoolYearTypeReference\", {{\"gradingPeriodDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"gradingPeriodDescriptor\", type text}, {\"periodSequence\", Int64.Type}, {\"beginDate\", type date}, {\"endDate\", type date}, {\"totalInstructionalDays\", Int64.Type}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared GraduationPlans = let\n  resourceName = \"graduationPlans\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n      #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n      #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"graduationSchoolYearTypeReference\", \"graduationPlanTypeDescriptor\", \"totalRequiredCredits\", \"creditsByCourses\", \"creditsByCreditCategories\", \"creditsBySubjects\", \"requiredAssessments\"}, {\"id\", \"educationOrganizationReference\", \"graduationSchoolYearTypeReference\", \"graduationPlanTypeDescriptor\", \"totalRequiredCredits\", \"creditsByCourses\", \"creditsByCreditCategories\", \"creditsBySubjects\", \"requiredAssessments\"}),\n      #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n      #\"Expanded graduationSchoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"graduationSchoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n      #\"Expanded creditsByCourses\" = Table.ExpandListColumn(#\"Expanded graduationSchoolYearTypeReference\", \"creditsByCourses\"),\n      #\"Expanded creditsByCreditCategories\" = Table.ExpandListColumn(#\"Expanded creditsByCourses\", \"creditsByCreditCategories\"),\n      #\"Expanded creditsBySubjects\" = Table.ExpandListColumn(#\"Expanded creditsByCreditCategories\", \"creditsBySubjects\"),\n      #\"Expanded requiredAssessments\" = Table.ExpandListColumn(#\"Expanded creditsBySubjects\", \"requiredAssessments\"),\n      #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded requiredAssessments\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"graduationPlanTypeDescriptor\", type text}, {\"totalRequiredCredits\", Int64.Type}, {\"creditsByCourses\", type any}, {\"creditsByCreditCategories\", type any}, {\"creditsBySubjects\", type any}, {\"requiredAssessments\", type any}}),\n      #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"creditsByCourses\", type text}, {\"creditsByCreditCategories\", type text}, {\"creditsBySubjects\", type text}, {\"requiredAssessments\", type text}}),\n      #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"creditsByCourses\", null}, {\"creditsByCreditCategories\", null}, {\"creditsBySubjects\", null}, {\"requiredAssessments\", null}}),\n      #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Replace errors\", {{\"graduationPlanTypeDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}})\n    in\n      #\"Extracted text after delimiter\"\n      else jsonSchema(resourceName)\n    in\n      Output;\r\nshared LocalEducationAgencies = let\n  resourceName = \"localEducationAgencies\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"localEducationAgencyId\", \"nameOfInstitution\", \"localEducationAgencyCategoryDescriptor\", \"addresses\", \"categories\", \"identificationCodes\", \"indicators\", \"institutionTelephones\", \"internationalAddresses\", \"_ext\", \"accountabilities\", \"federalFunds\"}, {\"id\", \"localEducationAgencyId\", \"nameOfInstitution\", \"localEducationAgencyCategoryDescriptor\", \"addresses\", \"categories\", \"identificationCodes\", \"indicators\", \"institutionTelephones\", \"internationalAddresses\", \"_ext\", \"accountabilities\", \"federalFunds\"}),\n  #\"Expanded addresses\" = Table.ExpandListColumn(#\"Expanded Column1\", \"addresses\"),\n  #\"Expanded categories\" = Table.ExpandListColumn(#\"Expanded addresses\", \"categories\"),\n  #\"Expanded categories 1\" = Table.ExpandRecordColumn(#\"Expanded categories\", \"categories\", {\"educationOrganizationCategoryDescriptor\"}, {\"educationOrganizationCategoryDescriptor\"}),\n  #\"Expanded identificationCodes\" = Table.ExpandListColumn(#\"Expanded categories 1\", \"identificationCodes\"),\n  #\"Expanded indicators\" = Table.ExpandListColumn(#\"Expanded identificationCodes\", \"indicators\"),\n  #\"Expanded institutionTelephones\" = Table.ExpandListColumn(#\"Expanded indicators\", \"institutionTelephones\"),\n  #\"Expanded _ext\" = Table.ExpandRecordColumn(#\"Expanded institutionTelephones\", \"_ext\", {\"tpdm\"}, {\"tpdm\"}),\n  #\"Expanded accountabilities\" = Table.ExpandListColumn(#\"Expanded _ext\", \"accountabilities\"),\n  #\"Expanded federalFunds\" = Table.ExpandListColumn(#\"Expanded accountabilities\", \"federalFunds\"),\n  #\"Expanded internationalAddresses\" = Table.ExpandListColumn(#\"Expanded federalFunds\", \"internationalAddresses\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded internationalAddresses\", {{\"localEducationAgencyCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"educationOrganizationCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"localEducationAgencyId\", Int64.Type}, {\"nameOfInstitution\", type text}, {\"addresses\", type text}, {\"identificationCodes\", type text}, {\"indicators\", type text}, {\"institutionTelephones\", type text}, {\"internationalAddresses\", type text}, {\"tpdm\", type text}, {\"accountabilities\", type text}, {\"federalFunds\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"id\", null}, {\"localEducationAgencyId\", null}, {\"nameOfInstitution\", null}, {\"addresses\", null}, {\"identificationCodes\", null}, {\"indicators\", null}, {\"institutionTelephones\", null}, {\"internationalAddresses\", null}, {\"tpdm\", null}, {\"accountabilities\", null}, {\"federalFunds\", null}}),\n  #\"Removed duplicates\" = Table.Distinct(#\"Replace errors\", {\"id\", \"localEducationAgencyId\", \"nameOfInstitution\", \"localEducationAgencyCategoryDescriptor\", \"addresses\", \"educationOrganizationCategoryDescriptor\", \"identificationCodes\", \"indicators\", \"institutionTelephones\", \"internationalAddresses\", \"tpdm\", \"accountabilities\", \"federalFunds\"})\nin\n#\"Removed duplicates\"\nelse jsonSchema(resourceName)\nin\nOutput;\r\nshared Programs = let\n  resourceName = \"programs\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"programName\", \"programTypeDescriptor\", \"programId\", \"characteristics\", \"learningObjectives\", \"learningStandards\", \"services\", \"sponsors\"}, {\"id\", \"educationOrganizationReference\", \"programName\", \"programTypeDescriptor\", \"programId\", \"characteristics\", \"learningObjectives\", \"learningStandards\", \"services\", \"sponsors\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded characteristics\" = Table.ExpandListColumn(#\"Expanded educationOrganizationReference\", \"characteristics\"),\n  #\"Expanded learningObjectives\" = Table.ExpandListColumn(#\"Expanded characteristics\", \"learningObjectives\"),\n  #\"Expanded learningStandards\" = Table.ExpandListColumn(#\"Expanded learningObjectives\", \"learningStandards\"),\n  #\"Expanded services\" = Table.ExpandListColumn(#\"Expanded learningStandards\", \"services\"),\n  #\"Expanded sponsors\" = Table.ExpandListColumn(#\"Expanded services\", \"sponsors\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded sponsors\", {{\"programTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Extracted text after delimiter\", \"school_year\", each schoolyear), {{\"school_year\", Int64.Type}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"programName\", type text}, {\"programTypeDescriptor\", type text}, {\"programId\", type text}, {\"characteristics\", type any}, {\"learningObjectives\", type any}, {\"learningStandards\", type any}, {\"services\", type any}, {\"sponsors\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"characteristics\", type text}, {\"learningObjectives\", type text}, {\"learningStandards\", type text}, {\"services\", type text}, {\"sponsors\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"characteristics\", null}, {\"learningObjectives\", null}, {\"learningStandards\", null}, {\"services\", null}, {\"sponsors\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared Schools = let\n  resourceName = \"schools\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"localEducationAgencyReference\", \"schoolId\", \"nameOfInstitution\", \"webSite\", \"charterStatusDescriptor\", \"schoolTypeDescriptor\", \"addresses\", \"educationOrganizationCategories\", \"identificationCodes\", \"indicators\", \"institutionTelephones\", \"internationalAddresses\", \"_ext\", \"schoolCategories\", \"gradeLevels\", \"shortNameOfInstitution\"}, {\"id\", \"localEducationAgencyReference\", \"schoolId\", \"nameOfInstitution\", \"webSite\", \"charterStatusDescriptor\", \"schoolTypeDescriptor\", \"addresses\", \"educationOrganizationCategories\", \"identificationCodes\", \"indicators\", \"institutionTelephones\", \"internationalAddresses\", \"_ext\", \"schoolCategories\", \"gradeLevels\", \"shortNameOfInstitution\"}),\n  #\"Expanded localEducationAgencyReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"localEducationAgencyReference\", {\"localEducationAgencyId\"}, {\"localEducationAgencyId\"}),\n  #\"Expanded addresses\" = Table.ExpandListColumn(#\"Expanded localEducationAgencyReference\", \"addresses\"),\n  #\"Expanded addresses 1\" = Table.ExpandRecordColumn(#\"Expanded addresses\", \"addresses\", {\"addressTypeDescriptor\", \"city\", \"postalCode\", \"stateAbbreviationDescriptor\", \"streetNumberName\", \"periods\"}, {\"addressTypeDescriptor\", \"city\", \"postalCode\", \"stateAbbreviationDescriptor\", \"streetNumberName\", \"periods\"}),\n  #\"Expanded periods\" = Table.ExpandListColumn(#\"Expanded addresses 1\", \"periods\"),\n  #\"Expanded educationOrganizationCategories\" = Table.ExpandListColumn(#\"Expanded periods\", \"educationOrganizationCategories\"),\n  #\"Expanded educationOrganizationCategories 1\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationCategories\", \"educationOrganizationCategories\", {\"educationOrganizationCategoryDescriptor\"}, {\"educationOrganizationCategoryDescriptor\"}),\n  #\"Expanded identificationCodes\" = Table.ExpandListColumn(#\"Expanded educationOrganizationCategories 1\", \"identificationCodes\"),\n  #\"Expanded indicators\" = Table.ExpandListColumn(#\"Expanded identificationCodes\", \"indicators\"),\n  #\"Expanded institutionTelephones\" = Table.ExpandListColumn(#\"Expanded indicators\", \"institutionTelephones\"),\n  #\"Expanded institutionTelephones 1\" = Table.ExpandRecordColumn(#\"Expanded institutionTelephones\", \"institutionTelephones\", {\"institutionTelephoneNumberTypeDescriptor\", \"telephoneNumber\"}, {\"institutionTelephoneNumberTypeDescriptor\", \"telephoneNumber\"}),\n  #\"Expanded internationalAddresses\" = Table.ExpandListColumn(#\"Expanded institutionTelephones 1\", \"internationalAddresses\"),\n  #\"Expanded _ext\" = Table.ExpandRecordColumn(#\"Expanded internationalAddresses\", \"_ext\", {\"tpdm\"}, {\"tpdm\"}),\n  #\"Expanded schoolCategories\" = Table.ExpandListColumn(#\"Expanded _ext\", \"schoolCategories\"),\n  #\"Expanded schoolCategories 1\" = Table.ExpandRecordColumn(#\"Expanded schoolCategories\", \"schoolCategories\", {\"schoolCategoryDescriptor\"}, {\"schoolCategoryDescriptor\"}),\n  #\"Expanded gradeLevels\" = Table.ExpandListColumn(#\"Expanded schoolCategories 1\", \"gradeLevels\"),\n  #\"Expanded gradeLevels 1\" = Table.ExpandRecordColumn(#\"Expanded gradeLevels\", \"gradeLevels\", {\"gradeLevelDescriptor\"}, {\"gradeLevelDescriptor\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded gradeLevels 1\", {{\"charterStatusDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"schoolTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"addressTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"stateAbbreviationDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"educationOrganizationCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"institutionTelephoneNumberTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"schoolCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"gradeLevelDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"localEducationAgencyId\", Int64.Type}, {\"schoolId\", Int64.Type}, {\"nameOfInstitution\", type text}, {\"webSite\", type text}, {\"charterStatusDescriptor\", type text}, {\"schoolTypeDescriptor\", type text}, {\"addressTypeDescriptor\", type text}, {\"city\", type text}, {\"postalCode\", type text}, {\"stateAbbreviationDescriptor\", type text}, {\"streetNumberName\", type text}, {\"periods\", type any}, {\"educationOrganizationCategoryDescriptor\", type text}, {\"identificationCodes\", type any}, {\"indicators\", type any}, {\"institutionTelephoneNumberTypeDescriptor\", type text}, {\"telephoneNumber\", type text}, {\"internationalAddresses\", type any}, {\"tpdm\", type any}, {\"schoolCategoryDescriptor\", type text}, {\"gradeLevelDescriptor\", type text}, {\"shortNameOfInstitution\", type text}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"periods\", type text}, {\"identificationCodes\", type text}, {\"indicators\", type text}, {\"internationalAddresses\", type text}, {\"tpdm\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"periods\", null}, {\"identificationCodes\", null}, {\"indicators\", null}, {\"internationalAddresses\", null}, {\"tpdm\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared SchoolYearTypes = let\n  resourceName = \"schoolYearTypes\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n      #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n      #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"schoolYear\", \"currentSchoolYear\", \"schoolYearDescription\"}, {\"id\", \"schoolYear\", \"currentSchoolYear\", \"schoolYearDescription\"}),\n      #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded Column1\", {{\"id\", type text}, {\"schoolYear\", Int64.Type}, {\"currentSchoolYear\", type logical}, {\"schoolYearDescription\", type text}})\n    in \n      #\"Changed column type\"\n  else jsonSchema(resourceName)\nin\n  Output;\r\nshared Sections = let\r\n  resourceName = \"sections\",\r\n  Source = retrieveFromAPI(resourceName, schoolyear),\r\n  RowsCount = Table.RowCount(Source),\r\n  Output = if RowsCount > 0 then\n    let\n      #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n      #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"courseOfferingReference\", \"locationReference\", \"locationSchoolReference\", \"sectionIdentifier\", \"availableCredits\", \"educationalEnvironmentDescriptor\", \"sequenceOfCourse\", \"characteristics\", \"classPeriods\", \"courseLevelCharacteristics\", \"offeredGradeLevels\", \"programs\"}, {\"id\", \"courseOfferingReference\", \"locationReference\", \"locationSchoolReference\", \"sectionIdentifier\", \"availableCredits\", \"educationalEnvironmentDescriptor\", \"sequenceOfCourse\", \"characteristics\", \"classPeriods\", \"courseLevelCharacteristics\", \"offeredGradeLevels\", \"programs\"}),\n      #\"Expanded courseOfferingReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"courseOfferingReference\", {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sessionName\"}, {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sessionName\"}),\n      #\"Expanded locationReference\" = Table.ExpandRecordColumn(#\"Expanded courseOfferingReference\", \"locationReference\", {\"classroomIdentificationCode\"}, {\"classroomIdentificationCode\"}),\n      #\"Expanded characteristics\" = Table.ExpandListColumn(#\"Expanded locationReference\", \"characteristics\"),\n      #\"Expanded classPeriods\" = Table.ExpandListColumn(#\"Expanded characteristics\", \"classPeriods\"),\n      #\"Expanded classPeriods 1\" = Table.ExpandRecordColumn(#\"Expanded classPeriods\", \"classPeriods\", {\"classPeriodReference\"}, {\"classPeriodReference\"}),\n      #\"Expanded classPeriodReference\" = Table.ExpandRecordColumn(#\"Expanded classPeriods 1\", \"classPeriodReference\", {\"classPeriodName\"}, {\"classPeriodName\"}),\n      #\"Expanded courseLevelCharacteristics\" = Table.ExpandListColumn(#\"Expanded classPeriodReference\", \"courseLevelCharacteristics\"),\n      #\"Expanded offeredGradeLevels\" = Table.ExpandListColumn(#\"Expanded courseLevelCharacteristics\", \"offeredGradeLevels\"),\n      #\"Expanded programs\" = Table.ExpandListColumn(#\"Expanded offeredGradeLevels\", \"programs\"),\n      #\"Removed columns\" = Table.RemoveColumns(#\"Expanded programs\", {\"locationSchoolReference\"}),\n      #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Removed columns\", {{\"educationalEnvironmentDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n      #\"Transform columns\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"localCourseCode\", type text}, {\"schoolId\", type text}, {\"schoolYear\", type text}, {\"sessionName\", type text}, {\"classroomIdentificationCode\", type text}, {\"sectionIdentifier\", type text}, {\"availableCredits\", type text}, {\"sequenceOfCourse\", type text}, {\"characteristics\", type text}, {\"classPeriodName\", type text}, {\"courseLevelCharacteristics\", type text}, {\"offeredGradeLevels\", type text}, {\"programs\", type text}})\n  in #\"Transform columns\"\n  else jsonSchema(resourceName),\r\n  #\"Transform columns\" = Table.TransformColumnTypes(Output, {{\"id\", type text}, {\"sectionIdentifier\", type text}, {\"courseOfferingReference\", type text}, {\"locationReference\", type text}, {\"locationSchoolReference\", type text}, {\"availableCreditConversion\", type text}, {\"availableCredits\", type text}, {\"availableCreditTypeDescriptor\", type text}, {\"characteristics\", type text}, {\"classPeriods\", type text}, {\"courseLevelCharacteristics\", type text}, {\"educationalEnvironmentDescriptor\", type text}, {\"instructionLanguageDescriptor\", type text}, {\"mediumOfInstructionDescriptor\", type text}, {\"offeredGradeLevels\", type text}, {\"officialAttendancePeriod\", type text}, {\"populationServedDescriptor\", type text}, {\"programs\", type text}, {\"sectionName\", type text}, {\"sequenceOfCourse\", type text}, {\"_etag\", type text}}),\r\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"id\", null}, {\"sectionIdentifier\", null}, {\"courseOfferingReference\", null}, {\"locationReference\", null}, {\"locationSchoolReference\", null}, {\"availableCreditConversion\", null}, {\"availableCredits\", null}, {\"availableCreditTypeDescriptor\", null}, {\"characteristics\", null}, {\"classPeriods\", null}, {\"courseLevelCharacteristics\", null}, {\"educationalEnvironmentDescriptor\", null}, {\"instructionLanguageDescriptor\", null}, {\"mediumOfInstructionDescriptor\", null}, {\"offeredGradeLevels\", null}, {\"officialAttendancePeriod\", null}, {\"populationServedDescriptor\", null}, {\"programs\", null}, {\"sectionName\", null}, {\"sequenceOfCourse\", null}, {\"_etag\", null}})\r\nin\r\n  #\"Replace errors\";\r\nshared Sessions = let\n  resourceName = \"sessions\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"schoolReference\", \"schoolYearTypeReference\", \"sessionName\", \"beginDate\", \"endDate\", \"termDescriptor\", \"totalInstructionalDays\", \"academicWeeks\", \"gradingPeriods\"}, {\"id\", \"schoolReference\", \"schoolYearTypeReference\", \"sessionName\", \"beginDate\", \"endDate\", \"termDescriptor\", \"totalInstructionalDays\", \"academicWeeks\", \"gradingPeriods\"}),\n  #\"Expanded schoolReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"schoolReference\", {\"schoolId\"}, {\"schoolId\"}),\n  #\"Expanded schoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded schoolReference\", \"schoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n  #\"Expanded academicWeeks\" = Table.ExpandListColumn(#\"Expanded schoolYearTypeReference\", \"academicWeeks\"),\n  #\"Expanded gradingPeriods\" = Table.ExpandListColumn(#\"Expanded academicWeeks\", \"gradingPeriods\"),\n  #\"Expanded gradingPeriods 1\" = Table.ExpandRecordColumn(#\"Expanded gradingPeriods\", \"gradingPeriods\", {\"gradingPeriodReference\"}, {\"gradingPeriodReference\"}),\n  #\"Expanded gradingPeriodReference\" = Table.ExpandRecordColumn(#\"Expanded gradingPeriods 1\", \"gradingPeriodReference\", {\"gradingPeriodDescriptor\", \"periodSequence\"}, {\"gradingPeriodDescriptor\", \"periodSequence\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded gradingPeriodReference\", {{\"gradingPeriodDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"termDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"sessionName\", type text}, {\"beginDate\", type date}, {\"endDate\", type date}, {\"termDescriptor\", type text}, {\"totalInstructionalDays\", Int64.Type}, {\"academicWeeks\", type any}, {\"gradingPeriodDescriptor\", type text}, {\"periodSequence\", Int64.Type}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"academicWeeks\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"academicWeeks\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared Students = let\n  resourceName = \"students\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"studentUniqueId\", \"birthCountryDescriptor\", \"birthDate\", \"firstName\", \"lastSurname\", \"middleName\", \"identificationDocuments\", \"personalIdentificationDocuments\", \"visas\"}, {\"id\", \"studentUniqueId\", \"birthCountryDescriptor\", \"birthDate\", \"firstName\", \"lastSurname\", \"middleName\", \"identificationDocuments\", \"personalIdentificationDocuments\", \"visas\"}),\n  #\"Expanded identificationDocuments\" = Table.ExpandListColumn(#\"Expanded Column1\", \"identificationDocuments\"),\n  #\"Expanded personalIdentificationDocuments\" = Table.ExpandListColumn(#\"Expanded identificationDocuments\", \"personalIdentificationDocuments\"),\n  #\"Expanded visas\" = Table.ExpandListColumn(#\"Expanded personalIdentificationDocuments\", \"visas\"),\n  #\"Expanded visadescriptors\" = Table.ExpandRecordColumn(#\"Expanded visas\", \"visas\", {\"visaDescriptor\"}, {\"visaDescriptor\"}),\n  #\"Extracted text after delimiter 1\" = Table.TransformColumns(#\"Expanded visadescriptors\", {{\"birthCountryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"visaDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter 1\", {{\"id\", type text}, {\"studentUniqueId\", type text}, {\"birthCountryDescriptor\", type text}, {\"birthDate\", type date}, {\"firstName\", type text}, {\"lastSurname\", type text}, {\"middleName\", type text}, {\"identificationDocuments\", type text}, {\"personalIdentificationDocuments\", type text}, {\"visaDescriptor\", type text}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentAcademicRecords = let\n  resourceName = \"studentAcademicRecords\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"schoolYearTypeReference\", \"studentReference\", \"termDescriptor\", \"cumulativeAttemptedCredits\", \"cumulativeEarnedCredits\", \"cumulativeGradePointAverage\", \"sessionAttemptedCredits\", \"sessionEarnedCredits\", \"academicHonors\", \"diplomas\", \"gradePointAverages\", \"recognitions\", \"reportCards\"}, {\"id\", \"educationOrganizationReference\", \"schoolYearTypeReference\", \"studentReference\", \"termDescriptor\", \"cumulativeAttemptedCredits\", \"cumulativeEarnedCredits\", \"cumulativeGradePointAverage\", \"sessionAttemptedCredits\", \"sessionEarnedCredits\", \"academicHonors\", \"diplomas\", \"gradePointAverages\", \"recognitions\", \"reportCards\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded schoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"schoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded schoolYearTypeReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Expanded academicHonors\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"academicHonors\"),\n  #\"Expanded diplomas\" = Table.ExpandListColumn(#\"Expanded academicHonors\", \"diplomas\"),\n  #\"Expanded gradePointAverages\" = Table.ExpandListColumn(#\"Expanded diplomas\", \"gradePointAverages\"),\n  #\"Expanded recognitions\" = Table.ExpandListColumn(#\"Expanded gradePointAverages\", \"recognitions\"),\n  #\"Expanded reportCards\" = Table.ExpandListColumn(#\"Expanded recognitions\", \"reportCards\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded reportCards\", {{\"termDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"studentUniqueId\", type text}, {\"termDescriptor\", type text}, {\"cumulativeAttemptedCredits\", type number}, {\"cumulativeEarnedCredits\", type number}, {\"cumulativeGradePointAverage\", type number}, {\"sessionAttemptedCredits\", type number}, {\"sessionEarnedCredits\", type number}, {\"academicHonors\", type any}, {\"diplomas\", type any}, {\"gradePointAverages\", type any}, {\"recognitions\", type any}, {\"reportCards\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"academicHonors\", type text}, {\"diplomas\", type text}, {\"gradePointAverages\", type text}, {\"recognitions\", type text}, {\"reportCards\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"academicHonors\", null}, {\"diplomas\", null}, {\"gradePointAverages\", null}, {\"recognitions\", null}, {\"reportCards\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentEduOrgAssoc_Source = let\n  Source = retrieveFromAPI(\"StudentEducationOrganizationAssociations\", schoolyear)\nin\n  Source;\r\nshared StudentEducationOrganizationAssociations = let\n  Source = StudentEduOrgAssoc_Source,\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"studentReference\", \"hispanicLatinoEthnicity\", \"limitedEnglishProficiencyDescriptor\", \"sexDescriptor\", \"addresses\", \"ancestryEthnicOrigins\", \"cohortYears\", \"disabilities\", \"electronicMails\", \"internationalAddresses\", \"languages\", \"programParticipations\", \"races\", \"studentCharacteristics\", \"studentIdentificationCodes\", \"studentIndicators\", \"telephones\", \"tribalAffiliations\"}, {\"id\", \"educationOrganizationReference\", \"studentReference\", \"hispanicLatinoEthnicity\", \"limitedEnglishProficiencyDescriptor\", \"sexDescriptor\", \"addresses\", \"ancestryEthnicOrigins\", \"cohortYears\", \"disabilities\", \"electronicMails\", \"internationalAddresses\", \"languages\", \"programParticipations\", \"races\", \"studentCharacteristics\", \"studentIdentificationCodes\", \"studentIndicators\", \"telephones\", \"tribalAffiliations\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Expanded addresses\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"addresses\"),\n  #\"Expanded addresses 1\" = Table.ExpandRecordColumn(#\"Expanded addresses\", \"addresses\", {\"addressTypeDescriptor\", \"city\", \"postalCode\", \"stateAbbreviationDescriptor\", \"streetNumberName\", \"periods\"}, {\"addressTypeDescriptor\", \"city\", \"postalCode\", \"stateAbbreviationDescriptor\", \"streetNumberName\", \"periods\"}),\n  #\"Expanded periods\" = Table.ExpandListColumn(#\"Expanded addresses 1\", \"periods\"),\n  #\"Expanded ancestryEthnicOrigins\" = Table.ExpandListColumn(#\"Expanded periods\", \"ancestryEthnicOrigins\"),\n  #\"Expanded cohortYears\" = Table.ExpandListColumn(#\"Expanded ancestryEthnicOrigins\", \"cohortYears\"),\n  #\"Expanded cohortYears 1\" = Table.ExpandRecordColumn(#\"Expanded cohortYears\", \"cohortYears\", {\"schoolYearTypeReference\", \"cohortYearTypeDescriptor\"}, {\"schoolYearTypeReference\", \"cohortYearTypeDescriptor\"}),\n  #\"Expanded schoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded cohortYears 1\", \"schoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n  #\"Expanded disabilities\" = Table.ExpandListColumn(#\"Expanded schoolYearTypeReference\", \"disabilities\"),\n  #\"Expanded electronicMails\" = Table.ExpandListColumn(#\"Expanded disabilities\", \"electronicMails\"),\n  #\"Expanded electronicMails 1\" = Table.ExpandRecordColumn(#\"Expanded electronicMails\", \"electronicMails\", {\"electronicMailAddress\", \"electronicMailTypeDescriptor\", \"primaryEmailAddressIndicator\"}, {\"electronicMailAddress\", \"electronicMailTypeDescriptor\", \"primaryEmailAddressIndicator\"}),\n  #\"Expanded internationalAddresses\" = Table.ExpandListColumn(#\"Expanded electronicMails 1\", \"internationalAddresses\"),\n  #\"Expanded languages\" = Table.ExpandListColumn(#\"Expanded internationalAddresses\", \"languages\"),\n  #\"Expanded languages 1\" = Table.ExpandRecordColumn(#\"Expanded languages\", \"languages\", {\"languageDescriptor\", \"uses\"}, {\"languageDescriptor\", \"uses\"}),\n  #\"Expanded uses\" = Table.ExpandListColumn(#\"Expanded languages 1\", \"uses\"),\n  #\"Expanded uses 1\" = Table.ExpandRecordColumn(#\"Expanded uses\", \"uses\", {\"languageUseDescriptor\"}, {\"languageUseDescriptor\"}),\n  #\"Expanded programParticipations\" = Table.ExpandListColumn(#\"Expanded uses 1\", \"programParticipations\"),\n  #\"Expanded races\" = Table.ExpandListColumn(#\"Expanded programParticipations\", \"races\"),\n  #\"Expanded races 1\" = Table.ExpandRecordColumn(#\"Expanded races\", \"races\", {\"raceDescriptor\"}, {\"raceDescriptor\"}),\n  #\"Expanded studentCharacteristics\" = Table.ExpandListColumn(#\"Expanded races 1\", \"studentCharacteristics\"),\n  #\"Expanded studentIndicators\" = Table.ExpandListColumn(#\"Expanded studentCharacteristics\", \"studentIndicators\"),\n  #\"Expanded telephones\" = Table.ExpandListColumn(#\"Expanded studentIndicators\", \"telephones\"),\n  #\"Expanded telephones 1\" = Table.ExpandRecordColumn(#\"Expanded telephones\", \"telephones\", {\"telephoneNumber\", \"telephoneNumberTypeDescriptor\"}, {\"telephoneNumber\", \"telephoneNumberTypeDescriptor\"}),\n  #\"Expanded tribalAffiliations\" = Table.ExpandListColumn(#\"Expanded telephones 1\", \"tribalAffiliations\"),\n  #\"Removed columns\" = Table.RemoveColumns(#\"Expanded tribalAffiliations\", {\"studentIdentificationCodes\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Removed columns\", {{\"limitedEnglishProficiencyDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"sexDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"addressTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"stateAbbreviationDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"cohortYearTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"electronicMailTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"languageDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"languageUseDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"raceDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"telephoneNumberTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"studentUniqueId\", type text}, {\"hispanicLatinoEthnicity\", type logical}, {\"limitedEnglishProficiencyDescriptor\", type text}, {\"sexDescriptor\", type text}, {\"addressTypeDescriptor\", type text}, {\"city\", type text}, {\"postalCode\", type text}, {\"stateAbbreviationDescriptor\", type text}, {\"streetNumberName\", type text}, {\"periods\", type any}, {\"ancestryEthnicOrigins\", type any}, {\"schoolYear\", Int64.Type}, {\"cohortYearTypeDescriptor\", type text}, {\"disabilities\", type any}, {\"electronicMailAddress\", type text}, {\"electronicMailTypeDescriptor\", type text}, {\"primaryEmailAddressIndicator\", type logical}, {\"internationalAddresses\", type any}, {\"languageDescriptor\", type text}, {\"languageUseDescriptor\", type text}, {\"programParticipations\", type any}, {\"raceDescriptor\", type text}, {\"studentCharacteristics\", type any}, {\"studentIndicators\", type any}, {\"telephoneNumber\", type text}, {\"telephoneNumberTypeDescriptor\", type text}, {\"tribalAffiliations\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"periods\", type text}, {\"ancestryEthnicOrigins\", type text}, {\"disabilities\", type text}, {\"internationalAddresses\", type text}, {\"programParticipations\", type text}, {\"studentCharacteristics\", type text}, {\"studentIndicators\", type text}, {\"tribalAffiliations\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"periods\", null}, {\"ancestryEthnicOrigins\", null}, {\"disabilities\", null}, {\"internationalAddresses\", null}, {\"programParticipations\", null}, {\"studentCharacteristics\", null}, {\"studentIndicators\", null}, {\"tribalAffiliations\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(studentEducationOrganizationAssociations)\n  in\n  Output;\r\nshared StudentIdentificationCodes = let\n  Source = StudentEduOrgAssoc_Source,\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"studentReference\", \"studentIdentificationCodes\"}, {\"id\", \"educationOrganizationReference\", \"studentReference\", \"studentIdentificationCodes\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Expanded studentIdentificationCodes\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"studentIdentificationCodes\"),\n  #\"Expanded studentIdentificationCodes 1\" = Table.ExpandRecordColumn(#\"Expanded studentIdentificationCodes\", \"studentIdentificationCodes\", {\"assigningOrganizationIdentificationCode\", \"studentIdentificationSystemDescriptor\", \"identificationCode\"}, {\"assigningOrganizationIdentificationCode\", \"studentIdentificationSystemDescriptor\", \"identificationCode\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded studentIdentificationCodes 1\", {{\"studentIdentificationSystemDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"studentUniqueId\", type text}, {\"assigningOrganizationIdentificationCode\", type text}, {\"studentIdentificationSystemDescriptor\", type text}, {\"identificationCode\", type text}})\nin\n  #\"Changed column type\"\n  else jsonSchema(\"studentEducationOrganizationAssociations\")\n  in\n  Output;\r\nshared StudentProgramAssociations = let\n  resourceName = \"studentProgramAssociations\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"programReference\", \"studentReference\", \"beginDate\", \"programParticipationStatuses\", \"services\"}, {\"id\", \"educationOrganizationReference\", \"programReference\", \"studentReference\", \"beginDate\", \"programParticipationStatuses\", \"services\"}),\n  #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n  #\"Expanded programReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"programReference\", {\"programName\", \"programTypeDescriptor\"}, {\"programName\", \"programTypeDescriptor\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded programReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Expanded programParticipationStatuses\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"programParticipationStatuses\"),\n  #\"Expanded services\" = Table.ExpandListColumn(#\"Expanded programParticipationStatuses\", \"services\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded services\", {{\"programTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"programName\", type text}, {\"programTypeDescriptor\", type text}, {\"studentUniqueId\", type text}, {\"beginDate\", type date}, {\"programParticipationStatuses\", type any}, {\"services\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"programParticipationStatuses\", type text}, {\"services\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"programParticipationStatuses\", null}, {\"services\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentSectionAttendanceEvents = let\n  resourceName = \"studentSectionAttendanceEvents\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"sectionReference\", \"studentReference\", \"attendanceEventCategoryDescriptor\", \"eventDate\"}, {\"id\", \"sectionReference\", \"studentReference\", \"attendanceEventCategoryDescriptor\", \"eventDate\"}),\n  #\"Expanded sectionReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"sectionReference\", {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sectionIdentifier\", \"sessionName\"}, {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sectionIdentifier\", \"sessionName\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded sectionReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded studentReference\", {{\"attendanceEventCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"localCourseCode\", type text}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"sectionIdentifier\", type text}, {\"sessionName\", type text}, {\"studentUniqueId\", type text}, {\"attendanceEventCategoryDescriptor\", type text}, {\"eventDate\", type date}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentSchoolAssociations = let\n  resourceName = \"studentSchoolAssociations\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"graduationPlanReference\", \"schoolReference\", \"schoolYearTypeReference\", \"studentReference\", \"entryDate\", \"entryGradeLevelDescriptor\", \"entryTypeDescriptor\", \"exitWithdrawlDate\", \"exitWithdrawTypeDescriptor\", \"primarySchool\", \"repeatGradeIndicator\", \"residencyStatusDescriptor\", \"schoolChoiceTransfer\", \"alternativeGraduationPlans\", \"educationPlans\"}, {\"id\", \"graduationPlanReference\", \"schoolReference\", \"schoolYearTypeReference\", \"studentReference\", \"entryDate\", \"entryGradeLevelDescriptor\", \"entryTypeDescriptor\", \"exitWithdrawlDate\", \"exitWithdrawTypeDescriptor\", \"primarySchool\", \"repeatGradeIndicator\", \"residencyStatusDescriptor\", \"schoolChoiceTransfer\", \"alternativeGraduationPlans\", \"educationPlans\"}),\n  #\"Expanded graduationPlanReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"graduationPlanReference\", {\"educationOrganizationId\", \"graduationPlanTypeDescriptor\", \"graduationSchoolYear\"}, {\"educationOrganizationId\", \"graduationPlanTypeDescriptor\", \"graduationSchoolYear\"}),\n  #\"Expanded schoolReference\" = Table.ExpandRecordColumn(#\"Expanded graduationPlanReference\", \"schoolReference\", {\"schoolId\"}, {\"schoolId\"}),\n  #\"Expanded schoolYearTypeReference\" = Table.ExpandRecordColumn(#\"Expanded schoolReference\", \"schoolYearTypeReference\", {\"schoolYear\"}, {\"schoolYear\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded schoolYearTypeReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Expanded alternativeGraduationPlans\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"alternativeGraduationPlans\"),\n  #\"Expanded educationPlans\" = Table.ExpandListColumn(#\"Expanded alternativeGraduationPlans\", \"educationPlans\"),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded educationPlans\", {{\"graduationPlanTypeDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}, {\"entryGradeLevelDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}, {\"entryTypeDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}, {\"residencyStatusDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}, {\"exitWithdrawTypeDescriptor\", each Text.AfterDelimiter(_, \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"graduationPlanTypeDescriptor\", type text}, {\"graduationSchoolYear\", type any}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"studentUniqueId\", type text}, {\"entryDate\", type date}, {\"entryGradeLevelDescriptor\", type text}, {\"entryTypeDescriptor\", type text}, {\"exitWithdrawlDate\", type date}, {\"exitWithdrawTypeDescriptor\", type text}, {\"primarySchool\", type logical}, {\"repeatGradeIndicator\", type logical}, {\"residencyStatusDescriptor\", type text}, {\"schoolChoiceTransfer\", type any}, {\"alternativeGraduationPlans\", type any}, {\"educationPlans\", type any}}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"graduationSchoolYear\", type text}, {\"schoolChoiceTransfer\", type text}, {\"alternativeGraduationPlans\", type text}, {\"educationPlans\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"graduationSchoolYear\", null}, {\"schoolChoiceTransfer\", null}, {\"alternativeGraduationPlans\", null}, {\"educationPlans\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentSchoolAttendanceEvents = let\n  resourceName = \"studentSchoolAttendanceEvents\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"schoolReference\", \"sessionReference\", \"studentReference\", \"attendanceEventCategoryDescriptor\", \"eventDate\", \"attendanceEventReason\"}, {\"id\", \"schoolReference\", \"sessionReference\", \"studentReference\", \"attendanceEventCategoryDescriptor\", \"eventDate\", \"attendanceEventReason\"}),\n  #\"Expanded schoolReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"schoolReference\", {\"schoolId\"}, {\"schoolId\"}),\n  #\"Expanded sessionReference\" = Table.ExpandRecordColumn(#\"Expanded schoolReference\", \"sessionReference\", {\"schoolYear\", \"sessionName\"}, {\"schoolYear\", \"sessionName\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded sessionReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded studentReference\", {{\"attendanceEventCategoryDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Extracted text after delimiter\", {{\"id\", type text}, {\"schoolId\", Int64.Type}, {\"schoolYear\", Int64.Type}, {\"sessionName\", type text}, {\"studentUniqueId\", type text}, {\"attendanceEventCategoryDescriptor\", type text}, {\"eventDate\", type date}, {\"attendanceEventReason\", type text}})\nin\n  #\"Changed column type\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentSectionAssociations = let\n  resourceName = \"studentSectionAssociations\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n  #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"sectionReference\", \"studentReference\", \"beginDate\", \"endDate\"}, {\"id\", \"sectionReference\", \"studentReference\", \"beginDate\", \"endDate\"}),\n  #\"Expanded sectionReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"sectionReference\", {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sectionIdentifier\", \"sessionName\"}, {\"localCourseCode\", \"schoolId\", \"schoolYear\", \"sectionIdentifier\", \"sessionName\"}),\n  #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded sectionReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n  #\"Transform columns\" = Table.TransformColumnTypes(#\"Expanded studentReference\", {{\"id\", type text}, {\"localCourseCode\", type text}, {\"schoolId\", type text}, {\"schoolYear\", type text}, {\"sectionIdentifier\", type text}, {\"sessionName\", type text}, {\"studentUniqueId\", type text}, {\"beginDate\", type text}, {\"endDate\", type text}}),\n  #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"id\", null}, {\"localCourseCode\", null}, {\"schoolId\", null}, {\"schoolYear\", null}, {\"sectionIdentifier\", null}, {\"sessionName\", null}, {\"studentUniqueId\", null}, {\"beginDate\", null}, {\"endDate\", null}})\nin\n  #\"Replace errors\"\n  else jsonSchema(resourceName)\n  in\n  Output;\r\nshared StudentSpecialEducationProgramAssociations = let\n  resourceName = \"studentSpecialEducationProgramAssociations\",\n  Source = retrieveFromAPI(resourceName, schoolyear),\n  RowsCount = Table.RowCount(Source),\n  Output = if RowsCount > 0 then\n    let\n      #\"Expanded Column1 1\" = Table.ExpandListColumn(Source, \"Column1\"),\n      #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Expanded Column1 1\", \"Column1\", {\"id\", \"educationOrganizationReference\", \"programReference\", \"studentReference\", \"beginDate\", \"ideaEligibility\", \"specialEducationSettingDescriptor\", \"programParticipationStatuses\", \"disabilities\", \"serviceProviders\", \"specialEducationProgramServices\"}, {\"id\", \"educationOrganizationReference\", \"programReference\", \"studentReference\", \"beginDate\", \"ideaEligibility\", \"specialEducationSettingDescriptor\", \"programParticipationStatuses\", \"disabilities\", \"serviceProviders\", \"specialEducationProgramServices\"}),\n      #\"Expanded educationOrganizationReference\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"educationOrganizationReference\", {\"educationOrganizationId\"}, {\"educationOrganizationId\"}),\n      #\"Expanded programReference\" = Table.ExpandRecordColumn(#\"Expanded educationOrganizationReference\", \"programReference\", {\"programName\", \"programTypeDescriptor\"}, {\"programName\", \"programTypeDescriptor\"}),\n      #\"Expanded studentReference\" = Table.ExpandRecordColumn(#\"Expanded programReference\", \"studentReference\", {\"studentUniqueId\"}, {\"studentUniqueId\"}),\n      #\"Expanded programParticipationStatuses\" = Table.ExpandListColumn(#\"Expanded studentReference\", \"programParticipationStatuses\"),\n      #\"Expanded disabilities\" = Table.ExpandListColumn(#\"Expanded programParticipationStatuses\", \"disabilities\"),\n      #\"Expanded serviceProviders\" = Table.ExpandListColumn(#\"Expanded disabilities\", \"serviceProviders\"),\n      #\"Expanded specialEducationProgramServices\" = Table.ExpandListColumn(#\"Expanded serviceProviders\", \"specialEducationProgramServices\"),\n      #\"Extracted text after delimiter\" = Table.TransformColumns(#\"Expanded specialEducationProgramServices\", {{\"programTypeDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}, {\"specialEducationSettingDescriptor\", each Text.AfterDelimiter(Text.From(_), \"#\", 0), type text}}),\n      #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Extracted text after delimiter\", \"school_year\", each schoolyear), {{\"school_year\", Int64.Type}}),\n      #\"Changed column type\" = Table.TransformColumnTypes(#\"Added custom\", {{\"id\", type text}, {\"educationOrganizationId\", Int64.Type}, {\"programName\", type text}, {\"programTypeDescriptor\", type text}, {\"studentUniqueId\", type text}, {\"beginDate\", type date}, {\"ideaEligibility\", type logical}, {\"specialEducationSettingDescriptor\", type text}, {\"programParticipationStatuses\", type any}, {\"disabilities\", type any}, {\"serviceProviders\", type any}, {\"specialEducationProgramServices\", type any}}),\n      #\"Transform columns\" = Table.TransformColumnTypes(#\"Changed column type\", {{\"programParticipationStatuses\", type text}, {\"disabilities\", type text}, {\"serviceProviders\", type text}, {\"specialEducationProgramServices\", type text}}),\n      #\"Replace errors\" = Table.ReplaceErrorValues(#\"Transform columns\", {{\"programParticipationStatuses\", null}, {\"disabilities\", null}, {\"serviceProviders\", null}, {\"specialEducationProgramServices\", null}})\n    in\n      #\"Replace errors\"\n    else jsonSchema(resourceName)\nin\n  Output;\r\nshared jsonSchema = let\n    GetResource = (endpoint as text) as table =>\n        let\n            ResourceName = Text.Combine({\"edFi_\", Text.Range(endpoint, 0, Text.Length(endpoint) - 1)}),\n            Source = Json.Document(Web.Contents(\"https://api.ed-fi.org/v6.1/api/metadata/data/v3/resources/swagger.json\")),\n            resources = Source[#\"definitions\"],\n            Navigation = Record.Field(resources, ResourceName),\n            Converted_to_table = Record.ToTable(Navigation),\n            Navigation_1 = Converted_to_table{0}[Value],\n            Converted_to_table_1 = Record.ToTable(Navigation_1),\n            Transposed_table = Table.Transpose(Converted_to_table_1),\n            Promoted_headers = Table.PromoteHeaders(Transposed_table, [PromoteAllScalars = true]),\n            Removed_top_rows = Table.Skip(Promoted_headers, 1),\n            Column_to_expand = if List.Contains(Table.ColumnNames(Removed_top_rows), \"Results\") then \"Results\" else Table.ColumnNames(Removed_top_rows){0},\n            Expanded_Column = Table.ExpandListColumn(Removed_top_rows, Column_to_expand)\n        in\n            Expanded_Column\nin\n    GetResource;\r\n","connectionOverrides":[{"path":"https://edfiodsapiwebsite-production-iywcdebqm22da.azurewebsites.net/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"bf7ff165-7dba-47c9-b796-0caa354dc698","audience":null},{"path":"https://api-eastus.edgraph.com/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://api-eastus.edgraph.com/\"}","audience":null},{"path":"https://edfiapi.nefec.org/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://edfiapi.nefec.org/\"}","audience":null},{"path":"http://v5.2.0/DS/api/data/v3/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"http://v5.2.0/DS/api/data/v3\"}","audience":null},{"path":"https://api.ed-fi.org/","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://api.ed-fi.org/\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"57c7b39c-d3f6-4c0a-8f7c-fe2708cb74a5\",\"name\":\"Parameters\",\"description\":\"\",\"parentId\":null,\"order\":0},{\"id\":\"e6ce9be2-5ad5-4b60-9ac5-4b73ecccdd68\",\"name\":\"Functions\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"4996957d-e4ae-4638-b297-be8ce3f37193\",\"name\":\"Endpoints\",\"description\":\"\",\"parentId\":null,\"order\":2}]"}],"entities":[{"$type":"LocalEntity","name":"CalendarDates","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"CalendarDates.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"calendarCode","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"rel","dataType":"string"},{"name":"date","dataType":"date"},{"name":"calendarEventDescriptor","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:58.0624332+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/CalendarDates.csv?snapshot=2023-03-27T16%3A51%3A58.0451090Z"}]},{"$type":"LocalEntity","name":"Courses","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Courses.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"academicSubjectDescriptor","dataType":"string"},{"name":"courseCode","dataType":"string"},{"name":"courseDescription","dataType":"string"},{"name":"courseTitle","dataType":"string"},{"name":"numberOfParts","dataType":"int64"},{"name":"competencyLevels","dataType":"string"},{"name":"courseIdentificationSystemDescriptor","dataType":"string"},{"name":"assigningOrganizationIdentificationCode","dataType":"string"},{"name":"identificationCode","dataType":"string"},{"name":"learningObjectives","dataType":"string"},{"name":"learningStandards","dataType":"string"},{"name":"courseLevelCharacteristicDescriptor","dataType":"string"},{"name":"offeredGradeLevels","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:00.1563622+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Courses.csv?snapshot=2023-03-27T16%3A52%3A00.1381527Z"}]},{"$type":"LocalEntity","name":"CourseTranscripts","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"CourseTranscripts.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"courseCode","dataType":"string"},{"name":"educationOrganizationId","dataType":"string"},{"name":"schoolYear","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"termDescriptor","dataType":"string"},{"name":"courseAttemptResultDescriptor","dataType":"string"},{"name":"attemptedCredits","dataType":"string"},{"name":"earnedCredits","dataType":"string"},{"name":"finalLetterGradeEarned","dataType":"string"},{"name":"academicSubjects","dataType":"string"},{"name":"courseIdentificationSystemDescriptor","dataType":"string"},{"name":"assigningOrganizationIdentificationCode","dataType":"string"},{"name":"identificationCode","dataType":"string"},{"name":"creditCategories","dataType":"string"},{"name":"earnedAdditionalCredits","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:25.0353967+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/CourseTranscripts.csv?snapshot=2023-03-27T16%3A52%3A25.0197838Z"}]},{"$type":"LocalEntity","name":"Grades","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Grades.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"gradingPeriodDescriptor","dataType":"string"},{"name":"periodSequence","dataType":"int64"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"beginDate","dataType":"dateTime"},{"name":"localCourseCode","dataType":"string"},{"name":"sectionIdentifier","dataType":"string"},{"name":"sessionName","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"gradeTypeDescriptor","dataType":"string"},{"name":"letterGradeEarned","dataType":"string"},{"name":"numericGradeEarned","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:53:09.3503389+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Grades.csv?snapshot=2023-03-27T16%3A53%3A09.3335338Z"}]},{"$type":"LocalEntity","name":"GradingPeriods","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"GradingPeriods.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"gradingPeriodDescriptor","dataType":"string"},{"name":"periodSequence","dataType":"int64"},{"name":"beginDate","dataType":"date"},{"name":"endDate","dataType":"date"},{"name":"totalInstructionalDays","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:58.484353+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/GradingPeriods.csv?snapshot=2023-03-27T16%3A51%3A58.4559208Z"}]},{"$type":"LocalEntity","name":"GraduationPlans","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"GraduationPlans.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"graduationPlanTypeDescriptor","dataType":"string"},{"name":"totalRequiredCredits","dataType":"int64"},{"name":"creditsByCourses","dataType":"string"},{"name":"creditsByCreditCategories","dataType":"string"},{"name":"creditsBySubjects","dataType":"string"},{"name":"requiredAssessments","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:58.718782+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/GraduationPlans.csv?snapshot=2023-03-27T16%3A51%3A58.6938126Z"}]},{"$type":"LocalEntity","name":"LocalEducationAgencies","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"LocalEducationAgencies.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"localEducationAgencyId","dataType":"int64"},{"name":"nameOfInstitution","dataType":"string"},{"name":"localEducationAgencyCategoryDescriptor","dataType":"string"},{"name":"addresses","dataType":"string"},{"name":"educationOrganizationCategoryDescriptor","dataType":"string"},{"name":"identificationCodes","dataType":"string"},{"name":"indicators","dataType":"string"},{"name":"institutionTelephones","dataType":"string"},{"name":"internationalAddresses","dataType":"string"},{"name":"tpdm","dataType":"string"},{"name":"accountabilities","dataType":"string"},{"name":"federalFunds","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:51.8124027+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/LocalEducationAgencies.csv?snapshot=2023-03-27T16%3A51%3A51.7969643Z"}]},{"$type":"LocalEntity","name":"Programs","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Programs.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"programName","dataType":"string"},{"name":"programTypeDescriptor","dataType":"string"},{"name":"programId","dataType":"string"},{"name":"characteristics","dataType":"string"},{"name":"learningObjectives","dataType":"string"},{"name":"learningStandards","dataType":"string"},{"name":"services","dataType":"string"},{"name":"sponsors","dataType":"string"},{"name":"school_year","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:58.0936828+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Programs.csv?snapshot=2023-03-27T16%3A51%3A58.0770946Z"}]},{"$type":"LocalEntity","name":"Schools","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Schools.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"localEducationAgencyId","dataType":"int64"},{"name":"schoolId","dataType":"int64"},{"name":"nameOfInstitution","dataType":"string"},{"name":"webSite","dataType":"string"},{"name":"charterStatusDescriptor","dataType":"string"},{"name":"schoolTypeDescriptor","dataType":"string"},{"name":"addressTypeDescriptor","dataType":"string"},{"name":"city","dataType":"string"},{"name":"postalCode","dataType":"string"},{"name":"stateAbbreviationDescriptor","dataType":"string"},{"name":"streetNumberName","dataType":"string"},{"name":"periods","dataType":"string"},{"name":"educationOrganizationCategoryDescriptor","dataType":"string"},{"name":"identificationCodes","dataType":"string"},{"name":"indicators","dataType":"string"},{"name":"institutionTelephoneNumberTypeDescriptor","dataType":"string"},{"name":"telephoneNumber","dataType":"string"},{"name":"internationalAddresses","dataType":"string"},{"name":"tpdm","dataType":"string"},{"name":"schoolCategoryDescriptor","dataType":"string"},{"name":"gradeLevelDescriptor","dataType":"string"},{"name":"shortNameOfInstitution","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:54.6561642+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Schools.csv?snapshot=2023-03-27T16%3A51%3A54.6526592Z"}]},{"$type":"LocalEntity","name":"SchoolYearTypes","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"SchoolYearTypes.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"schoolYear","dataType":"int64"},{"name":"currentSchoolYear","dataType":"boolean"},{"name":"schoolYearDescription","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:51.8436604+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/SchoolYearTypes.csv?snapshot=2023-03-27T16%3A51%3A51.8099582Z"}]},{"$type":"LocalEntity","name":"Sections","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Sections.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"sectionIdentifier","dataType":"string"},{"name":"courseOfferingReference","dataType":"string"},{"name":"locationReference","dataType":"string"},{"name":"locationSchoolReference","dataType":"string"},{"name":"availableCreditConversion","dataType":"string"},{"name":"availableCredits","dataType":"string"},{"name":"availableCreditTypeDescriptor","dataType":"string"},{"name":"characteristics","dataType":"string"},{"name":"classPeriods","dataType":"string"},{"name":"courseLevelCharacteristics","dataType":"string"},{"name":"educationalEnvironmentDescriptor","dataType":"string"},{"name":"instructionLanguageDescriptor","dataType":"string"},{"name":"mediumOfInstructionDescriptor","dataType":"string"},{"name":"offeredGradeLevels","dataType":"string"},{"name":"officialAttendancePeriod","dataType":"string"},{"name":"populationServedDescriptor","dataType":"string"},{"name":"programs","dataType":"string"},{"name":"sectionName","dataType":"string"},{"name":"sequenceOfCourse","dataType":"string"},{"name":"_etag","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:59.937444+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Sections.csv?snapshot=2023-03-27T16%3A51%3A59.9342458Z"}]},{"$type":"LocalEntity","name":"Sessions","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Sessions.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"sessionName","dataType":"string"},{"name":"beginDate","dataType":"date"},{"name":"endDate","dataType":"date"},{"name":"termDescriptor","dataType":"string"},{"name":"totalInstructionalDays","dataType":"int64"},{"name":"academicWeeks","dataType":"string"},{"name":"gradingPeriodDescriptor","dataType":"string"},{"name":"periodSequence","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:51.8748897+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Sessions.csv?snapshot=2023-03-27T16%3A51%3A51.8459418Z"}]},{"$type":"LocalEntity","name":"Students","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"Students.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"birthCountryDescriptor","dataType":"string"},{"name":"birthDate","dataType":"date"},{"name":"firstName","dataType":"string"},{"name":"lastSurname","dataType":"string"},{"name":"middleName","dataType":"string"},{"name":"identificationDocuments","dataType":"string"},{"name":"personalIdentificationDocuments","dataType":"string"},{"name":"visaDescriptor","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:54.0467855+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/Students.csv?snapshot=2023-03-27T16%3A51%3A54.0319441Z"}]},{"$type":"LocalEntity","name":"StudentAcademicRecords","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentAcademicRecords.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"studentUniqueId","dataType":"string"},{"name":"termDescriptor","dataType":"string"},{"name":"cumulativeAttemptedCredits","dataType":"double"},{"name":"cumulativeEarnedCredits","dataType":"double"},{"name":"cumulativeGradePointAverage","dataType":"double"},{"name":"sessionAttemptedCredits","dataType":"double"},{"name":"sessionEarnedCredits","dataType":"double"},{"name":"academicHonors","dataType":"string"},{"name":"diplomas","dataType":"string"},{"name":"gradePointAverages","dataType":"string"},{"name":"recognitions","dataType":"string"},{"name":"reportCards","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:02.7656515+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentAcademicRecords.csv?snapshot=2023-03-27T16%3A52%3A02.7609549Z"}]},{"$type":"LocalEntity","name":"StudentEducationOrganizationAssociations","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentEducationOrganizationAssociations.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"studentUniqueId","dataType":"string"},{"name":"hispanicLatinoEthnicity","dataType":"boolean"},{"name":"limitedEnglishProficiencyDescriptor","dataType":"string"},{"name":"sexDescriptor","dataType":"string"},{"name":"addressTypeDescriptor","dataType":"string"},{"name":"city","dataType":"string"},{"name":"postalCode","dataType":"string"},{"name":"stateAbbreviationDescriptor","dataType":"string"},{"name":"streetNumberName","dataType":"string"},{"name":"periods","dataType":"string"},{"name":"ancestryEthnicOrigins","dataType":"string"},{"name":"schoolYear","dataType":"int64"},{"name":"cohortYearTypeDescriptor","dataType":"string"},{"name":"disabilities","dataType":"string"},{"name":"electronicMailAddress","dataType":"string"},{"name":"electronicMailTypeDescriptor","dataType":"string"},{"name":"primaryEmailAddressIndicator","dataType":"boolean"},{"name":"internationalAddresses","dataType":"string"},{"name":"languageDescriptor","dataType":"string"},{"name":"languageUseDescriptor","dataType":"string"},{"name":"programParticipations","dataType":"string"},{"name":"raceDescriptor","dataType":"string"},{"name":"studentCharacteristics","dataType":"string"},{"name":"studentIndicators","dataType":"string"},{"name":"telephoneNumber","dataType":"string"},{"name":"telephoneNumberTypeDescriptor","dataType":"string"},{"name":"tribalAffiliations","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:58.0780569+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentEducationOrganizationAssociations.csv?snapshot=2023-03-27T16%3A51%3A58.0541050Z"}]},{"$type":"LocalEntity","name":"StudentIdentificationCodes","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentIdentificationCodes.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"studentUniqueId","dataType":"string"},{"name":"assigningOrganizationIdentificationCode","dataType":"string"},{"name":"studentIdentificationSystemDescriptor","dataType":"string"},{"name":"identificationCode","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:57.9061907+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentIdentificationCodes.csv?snapshot=2023-03-27T16%3A51%3A57.8951781Z"}]},{"$type":"LocalEntity","name":"StudentProgramAssociations","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentProgramAssociations.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"programName","dataType":"string"},{"name":"programTypeDescriptor","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"beginDate","dataType":"date"},{"name":"programParticipationStatuses","dataType":"string"},{"name":"services","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:52.2186486+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentProgramAssociations.csv?snapshot=2023-03-27T16%3A51%3A52.2007801Z"}]},{"$type":"LocalEntity","name":"StudentSectionAttendanceEvents","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentSectionAttendanceEvents.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"localCourseCode","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"sectionIdentifier","dataType":"string"},{"name":"sessionName","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"attendanceEventCategoryDescriptor","dataType":"string"},{"name":"eventDate","dataType":"date"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:13.7144272+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentSectionAttendanceEvents.csv?snapshot=2023-03-27T16%3A52%3A13.6999564Z"}]},{"$type":"LocalEntity","name":"StudentSchoolAssociations","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentSchoolAssociations.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"graduationPlanTypeDescriptor","dataType":"string"},{"name":"graduationSchoolYear","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"studentUniqueId","dataType":"string"},{"name":"entryDate","dataType":"date"},{"name":"entryGradeLevelDescriptor","dataType":"string"},{"name":"entryTypeDescriptor","dataType":"string"},{"name":"exitWithdrawlDate","dataType":"date"},{"name":"exitWithdrawTypeDescriptor","dataType":"string"},{"name":"primarySchool","dataType":"boolean"},{"name":"repeatGradeIndicator","dataType":"boolean"},{"name":"residencyStatusDescriptor","dataType":"string"},{"name":"schoolChoiceTransfer","dataType":"string"},{"name":"alternativeGraduationPlans","dataType":"string"},{"name":"educationPlans","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:53.8281159+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentSchoolAssociations.csv?snapshot=2023-03-27T16%3A51%3A53.8220388Z"}]},{"$type":"LocalEntity","name":"StudentSchoolAttendanceEvents","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentSchoolAttendanceEvents.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"schoolId","dataType":"int64"},{"name":"schoolYear","dataType":"int64"},{"name":"sessionName","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"attendanceEventCategoryDescriptor","dataType":"string"},{"name":"eventDate","dataType":"date"},{"name":"attendanceEventReason","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:01.8125641+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentSchoolAttendanceEvents.csv?snapshot=2023-03-27T16%3A52%3A01.7943959Z"}]},{"$type":"LocalEntity","name":"StudentSectionAssociations","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentSectionAssociations.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"localCourseCode","dataType":"string"},{"name":"schoolId","dataType":"string"},{"name":"schoolYear","dataType":"string"},{"name":"sectionIdentifier","dataType":"string"},{"name":"sessionName","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"beginDate","dataType":"string"},{"name":"endDate","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:52:05.2032758+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentSectionAssociations.csv?snapshot=2023-03-27T16%3A52%3A05.1868457Z"}]},{"$type":"LocalEntity","name":"StudentSpecialEducationProgramAssociations","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"StudentSpecialEducationProgramAssociations.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"educationOrganizationId","dataType":"int64"},{"name":"programName","dataType":"string"},{"name":"programTypeDescriptor","dataType":"string"},{"name":"studentUniqueId","dataType":"string"},{"name":"beginDate","dataType":"date"},{"name":"ideaEligibility","dataType":"boolean"},{"name":"specialEducationSettingDescriptor","dataType":"string"},{"name":"programParticipationStatuses","dataType":"string"},{"name":"disabilities","dataType":"string"},{"name":"serviceProviders","dataType":"string"},{"name":"specialEducationProgramServices","dataType":"string"},{"name":"school_year","dataType":"int64"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2023-03-27T16:51:53.7811593+00:00","location":"https://wabiuseapcdsa.blob.core.windows.net:443/2db67bde-67e8-490e-b1e9-c1a99ef194e7/StudentSpecialEducationProgramAssociations.csv?snapshot=2023-03-27T16%3A51%3A53.7670637Z"}]}]}